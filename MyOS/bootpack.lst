     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_sheet_alloc
     7 00000000                                 	EXTERN	_mm_malloc
     8 00000000                                 	EXTERN	_sheet_setbuf
     9 00000000                                 	EXTERN	_sheet_updown
    10 00000000                                 	EXTERN	_sheet_slide
    11 00000000                                 	EXTERN	_draw_rect
    12 00000000                                 	EXTERN	_sprintf
    13 00000000                                 	EXTERN	_draw_string
    14 00000000                                 	EXTERN	_sheet_refresh
    15 00000000                                 	EXTERN	_memtest
    16 00000000                                 	EXTERN	_mm_init
    17 00000000                                 	EXTERN	_init_gdtidt
    18 00000000                                 	EXTERN	_init_pic
    19 00000000                                 	EXTERN	_io_sti
    20 00000000                                 	EXTERN	_init_keyboard
    21 00000000                                 	EXTERN	_enable_mouse
    22 00000000                                 	EXTERN	_keyfifo
    23 00000000                                 	EXTERN	_fifo8_init
    24 00000000                                 	EXTERN	_mousefifo
    25 00000000                                 	EXTERN	_timerfifo
    26 00000000                                 	EXTERN	_init_pit
    27 00000000                                 	EXTERN	_io_out8
    28 00000000                                 	EXTERN	_init_palette
    29 00000000                                 	EXTERN	_shtctl_init
    30 00000000                                 	EXTERN	_init_screen
    31 00000000                                 	EXTERN	_init_mouse_cursor
    32 00000000                                 	EXTERN	_mm_check
    33 00000000                                 	EXTERN	_start_timing
    34 00000000                                 	EXTERN	_task_init
    35 00000000                                 	EXTERN	_task_alloc
    36 00000000                                 	EXTERN	_task_run
    37 00000000                                 	EXTERN	_fifo8_status
    38 00000000                                 	EXTERN	_task_sleep
    39 00000000                                 	EXTERN	_fifo8_get
    40 00000000                                 	EXTERN	_key_to_char
    41 00000000                                 	EXTERN	_mouse_decode
    42 00000000                                 	EXTERN	_io_hlt
    43 00000000                                 [FILE "bootpack.c"]
    44                                          [SECTION .data]
    45 00000000                                 LC0:
    46 00000000 53 79 73 74 65 6D 20 54 69 6D   	DB	"System Timer",0x00
       0000000A 65 72 00 
    47 0000000D                                 LC1:
    48 0000000D 25 30 32 64 25 30 39 64 00      	DB	"%02d%09d",0x00
    49                                          [SECTION .text]
    50 00000000                                 	GLOBAL	_task_b_main
    51 00000000                                 _task_b_main:
    52 00000000 55                              	PUSH	EBP
    53 00000001 89 E5                           	MOV	EBP,ESP
    54 00000003 57                              	PUSH	EDI
    55 00000004 56                              	PUSH	ESI
    56 00000005 53                              	PUSH	EBX
    57 00000006 83 EC 20                        	SUB	ESP,32
    58 00000009 E8 [00000000]                   	CALL	_sheet_alloc
    59 0000000E 68 00001D4C                     	PUSH	7500
    60 00000013 89 C7                           	MOV	EDI,EAX
    61 00000015 E8 [00000000]                   	CALL	_mm_malloc
    62 0000001A 68 000000FF                     	PUSH	255
    63 0000001F 6A 32                           	PUSH	50
    64 00000021 89 C6                           	MOV	ESI,EAX
    65 00000023 68 00000096                     	PUSH	150
    66 00000028 50                              	PUSH	EAX
    67 00000029 57                              	PUSH	EDI
    68 0000002A E8 [00000000]                   	CALL	_sheet_setbuf
    69 0000002F 6A 00                           	PUSH	0
    70 00000031 68 [00000000]                   	PUSH	LC0
    71 00000036 6A 32                           	PUSH	50
    72 00000038 68 00000096                     	PUSH	150
    73 0000003D 56                              	PUSH	ESI
    74 0000003E E8 00000958                     	CALL	_make_window
    75 00000043 83 C4 2C                        	ADD	ESP,44
    76 00000046 6A 02                           	PUSH	2
    77 00000048 57                              	PUSH	EDI
    78 00000049 E8 [00000000]                   	CALL	_sheet_updown
    79 0000004E 6A 46                           	PUSH	70
    80 00000050 68 0000009B                     	PUSH	155
    81 00000055 57                              	PUSH	EDI
    82 00000056 E8 [00000000]                   	CALL	_sheet_slide
    83 0000005B 83 C4 14                        	ADD	ESP,20
    84 0000005E                                 L5:
    85 0000005E 6A 28                           	PUSH	40
    86 00000060 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
    87 00000063 6A 7D                           	PUSH	125
    88 00000065 6A 19                           	PUSH	25
    89 00000067 6A 19                           	PUSH	25
    90 00000069 6A 08                           	PUSH	8
    91 0000006B 68 00000096                     	PUSH	150
    92 00000070 56                              	PUSH	ESI
    93 00000071 E8 [00000000]                   	CALL	_draw_rect
    94 00000076 FF 35 0026A418                  	PUSH	DWORD [2532376]
    95 0000007C FF 35 0026A414                  	PUSH	DWORD [2532372]
    96 00000082 68 [0000000D]                   	PUSH	LC1
    97 00000087 53                              	PUSH	EBX
    98 00000088 E8 [00000000]                   	CALL	_sprintf
    99 0000008D 83 C4 2C                        	ADD	ESP,44
   100 00000090 53                              	PUSH	EBX
   101 00000091 6A 19                           	PUSH	25
   102 00000093 6A 19                           	PUSH	25
   103 00000095 6A 00                           	PUSH	0
   104 00000097 68 00000096                     	PUSH	150
   105 0000009C 56                              	PUSH	ESI
   106 0000009D E8 [00000000]                   	CALL	_draw_string
   107 000000A2 6A 00                           	PUSH	0
   108 000000A4 6A 29                           	PUSH	41
   109 000000A6 6A 7D                           	PUSH	125
   110 000000A8 6A 19                           	PUSH	25
   111 000000AA 6A 19                           	PUSH	25
   112 000000AC 57                              	PUSH	EDI
   113 000000AD E8 [00000000]                   	CALL	_sheet_refresh
   114 000000B2 83 C4 30                        	ADD	ESP,48
   115 000000B5 EB A7                           	JMP	L5
   116                                          [SECTION .data]
   117 00000016                                 LC2:
   118 00000016 25 64 20 4D 42 20 6D 65 6D 6F   	DB	"%d MB memory required for the OS",0x00
       00000020 72 79 20 72 65 71 75 69 72 65 
       0000002A 64 20 66 6F 72 20 74 68 65 20 
       00000034 4F 53 00 
   119 00000037                                 LC3:
   120 00000037 4D 79 4F 53 20 31 2E 30 20 2D   	DB	"MyOS 1.0 ----Richard",0x00
       00000041 2D 2D 2D 52 69 63 68 61 72 64 
       0000004B 00 
   121 0000004C                                 LC4:
   122 0000004C 4D 65 6D 6F 72 79 20 73 62 72   	DB	"Memory sbrk: 0x%x",0x00
       00000056 6B 3A 20 30 78 25 78 00 
   123 0000005E                                 LC5:
   124 0000005E 76 72 61 6D 3A 20 25 78 00      	DB	"vram: %x",0x00
   125 00000067                                 LC6:
   126 00000067 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,N)",0x00
       00000071 25 64 2C 4E 29 00 
   127 00000077                                 LC7:
   128 00000077 49 4E 54 20 32 31 20 28 49 52   	DB	"INT 21 (IRQ-1) : PS/2 keyboard [%x, %s]",0x00
       00000081 51 2D 31 29 20 3A 20 50 53 2F 
       0000008B 32 20 6B 65 79 62 6F 61 72 64 
       00000095 20 5B 25 78 2C 20 25 73 5D 00 
   129 0000009F                                 LC8:
   130 0000009F 49 4E 54 20 32 63 20 28 49 52   	DB	"INT 2c (IRQ-12) : PS/2 mouse [%x,%x,%x]",0x00
       000000A9 51 2D 31 32 29 20 3A 20 50 53 
       000000B3 2F 32 20 6D 6F 75 73 65 20 5B 
       000000BD 25 78 2C 25 78 2C 25 78 5D 00 
   131 000000C7                                 LC9:
   132 000000C7 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,L)",0x00
       000000D1 25 64 2C 4C 29 00 
   133 000000D7                                 LC11:
   134 000000D7 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,M)",0x00
       000000E1 25 64 2C 4D 29 00 
   135 000000E7                                 LC10:
   136 000000E7 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,R)",0x00
       000000F1 25 64 2C 52 29 00 
   137                                          [SECTION .text]
   138 000000B7                                 	GLOBAL	_HariMain
   139 000000B7                                 _HariMain:
   140 000000B7 55                              	PUSH	EBP
   141 000000B8 89 E5                           	MOV	EBP,ESP
   142 000000BA 57                              	PUSH	EDI
   143 000000BB 56                              	PUSH	ESI
   144 000000BC 53                              	PUSH	EBX
   145 000000BD 81 EC 00000124                  	SUB	ESP,292
   146 000000C3 C6 85 FFFFFEDB 00               	MOV	BYTE [-293+EBP],0
   147 000000CA 68 DFFFFFFF                     	PUSH	-536870913
   148 000000CF 68 00400000                     	PUSH	4194304
   149 000000D4 E8 [00000000]                   	CALL	_memtest
   150 000000D9 89 C6                           	MOV	ESI,EAX
   151 000000DB 58                              	POP	EAX
   152 000000DC 5A                              	POP	EDX
   153 000000DD 81 FE 009FFFFF                  	CMP	ESI,10485759
   154 000000E3 77 19                           	JA	L7
   155 000000E5 6A 0A                           	PUSH	10
   156 000000E7 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   157 000000EA 68 [00000016]                   	PUSH	LC2
   158 000000EF 53                              	PUSH	EBX
   159 000000F0 E8 [00000000]                   	CALL	_sprintf
   160 000000F5 53                              	PUSH	EBX
   161 000000F6 E8 000007AB                     	CALL	_sys_error
   162 000000FB 83 C4 10                        	ADD	ESP,16
   163 000000FE                                 L7:
   164 000000FE 56                              	PUSH	ESI
   165 000000FF 68 00400000                     	PUSH	4194304
   166 00000104 E8 [00000000]                   	CALL	_mm_init
   167 00000109 E8 [00000000]                   	CALL	_init_gdtidt
   168 0000010E E8 [00000000]                   	CALL	_init_pic
   169 00000113 E8 [00000000]                   	CALL	_io_sti
   170 00000118 E8 [00000000]                   	CALL	_init_keyboard
   171 0000011D 8D 85 FFFFFEF4                  	LEA	EAX,DWORD [-268+EBP]
   172 00000123 50                              	PUSH	EAX
   173 00000124 E8 [00000000]                   	CALL	_enable_mouse
   174 00000129 8D 45 A4                        	LEA	EAX,DWORD [-92+EBP]
   175 0000012C 50                              	PUSH	EAX
   176 0000012D 6A 20                           	PUSH	32
   177 0000012F 68 [00000000]                   	PUSH	_keyfifo
   178 00000134 E8 [00000000]                   	CALL	_fifo8_init
   179 00000139 8D 85 FFFFFF24                  	LEA	EAX,DWORD [-220+EBP]
   180 0000013F 50                              	PUSH	EAX
   181 00000140 68 00000080                     	PUSH	128
   182 00000145 68 [00000000]                   	PUSH	_mousefifo
   183 0000014A E8 [00000000]                   	CALL	_fifo8_init
   184 0000014F 8D 85 FFFFFF04                  	LEA	EAX,DWORD [-252+EBP]
   185 00000155 83 C4 24                        	ADD	ESP,36
   186 00000158 50                              	PUSH	EAX
   187 00000159 6A 20                           	PUSH	32
   188 0000015B 68 [00000000]                   	PUSH	_timerfifo
   189 00000160 E8 [00000000]                   	CALL	_fifo8_init
   190 00000165 E8 [00000000]                   	CALL	_init_pit
   191 0000016A 68 000000F8                     	PUSH	248
   192 0000016F 6A 21                           	PUSH	33
   193 00000171 E8 [00000000]                   	CALL	_io_out8
   194 00000176 68 000000EF                     	PUSH	239
   195 0000017B 68 000000A1                     	PUSH	161
   196 00000180 E8 [00000000]                   	CALL	_io_out8
   197 00000185 E8 [00000000]                   	CALL	_init_palette
   198 0000018A 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   199 00000191 50                              	PUSH	EAX
   200 00000192 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   201 00000199 50                              	PUSH	EAX
   202 0000019A FF 35 00000FF8                  	PUSH	DWORD [4088]
   203 000001A0 E8 [00000000]                   	CALL	_shtctl_init
   204 000001A5 83 C4 28                        	ADD	ESP,40
   205 000001A8 E8 [00000000]                   	CALL	_sheet_alloc
   206 000001AD 89 85 FFFFFEEC                  	MOV	DWORD [-276+EBP],EAX
   207 000001B3 E8 [00000000]                   	CALL	_sheet_alloc
   208 000001B8 89 85 FFFFFEE8                  	MOV	DWORD [-280+EBP],EAX
   209 000001BE E8 [00000000]                   	CALL	_sheet_alloc
   210 000001C3 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   211 000001CA 89 85 FFFFFEE4                  	MOV	DWORD [-284+EBP],EAX
   212 000001D0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   213 000001D7 0F AF C2                        	IMUL	EAX,EDX
   214 000001DA 50                              	PUSH	EAX
   215 000001DB E8 [00000000]                   	CALL	_mm_malloc
   216 000001E0 68 00000100                     	PUSH	256
   217 000001E5 89 C7                           	MOV	EDI,EAX
   218 000001E7 E8 [00000000]                   	CALL	_mm_malloc
   219 000001EC 68 00002BF2                     	PUSH	11250
   220 000001F1 89 C6                           	MOV	ESI,EAX
   221 000001F3 E8 [00000000]                   	CALL	_mm_malloc
   222 000001F8 68 000000FF                     	PUSH	255
   223 000001FD 89 C3                           	MOV	EBX,EAX
   224 000001FF 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   225 00000206 50                              	PUSH	EAX
   226 00000207 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   227 0000020E 50                              	PUSH	EAX
   228 0000020F 57                              	PUSH	EDI
   229 00000210 FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   230 00000216 E8 [00000000]                   	CALL	_sheet_setbuf
   231 0000021B 83 C4 20                        	ADD	ESP,32
   232 0000021E 68 000000FF                     	PUSH	255
   233 00000223 6A 10                           	PUSH	16
   234 00000225 6A 10                           	PUSH	16
   235 00000227 56                              	PUSH	ESI
   236 00000228 FF B5 FFFFFEE8                  	PUSH	DWORD [-280+EBP]
   237 0000022E E8 [00000000]                   	CALL	_sheet_setbuf
   238 00000233 68 000000FF                     	PUSH	255
   239 00000238 6A 4B                           	PUSH	75
   240 0000023A 68 00000096                     	PUSH	150
   241 0000023F 53                              	PUSH	EBX
   242 00000240 FF B5 FFFFFEE4                  	PUSH	DWORD [-284+EBP]
   243 00000246 E8 [00000000]                   	CALL	_sheet_setbuf
   244 0000024B 83 C4 28                        	ADD	ESP,40
   245 0000024E 6A 01                           	PUSH	1
   246 00000250 68 [00000000]                   	PUSH	LC0
   247 00000255 6A 4B                           	PUSH	75
   248 00000257 68 00000096                     	PUSH	150
   249 0000025C 53                              	PUSH	EBX
   250 0000025D BB 00000002                     	MOV	EBX,2
   251 00000262 E8 00000734                     	CALL	_make_window
   252 00000267 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   253 0000026E 50                              	PUSH	EAX
   254 0000026F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   255 00000276 50                              	PUSH	EAX
   256 00000277 57                              	PUSH	EDI
   257 00000278 E8 [00000000]                   	CALL	_init_screen
   258 0000027D 83 C4 20                        	ADD	ESP,32
   259 00000280 6A FF                           	PUSH	-1
   260 00000282 56                              	PUSH	ESI
   261 00000283 E8 [00000000]                   	CALL	_init_mouse_cursor
   262 00000288 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   263 0000028F 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   264 00000292 89 C8                           	MOV	EAX,ECX
   265 00000294 99                              	CDQ
   266 00000295 F7 FB                           	IDIV	EBX
   267 00000297 89 85 FFFFFEE0                  	MOV	DWORD [-288+EBP],EAX
   268 0000029D 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   269 000002A4 6A 00                           	PUSH	0
   270 000002A6 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   271 000002A9 89 C8                           	MOV	EAX,ECX
   272 000002AB 99                              	CDQ
   273 000002AC F7 FB                           	IDIV	EBX
   274 000002AE FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   275 000002B4 89 85 FFFFFEDC                  	MOV	DWORD [-292+EBP],EAX
   276 000002BA 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   277 000002BD E8 [00000000]                   	CALL	_sheet_updown
   278 000002C2 6A 01                           	PUSH	1
   279 000002C4 FF B5 FFFFFEE4                  	PUSH	DWORD [-284+EBP]
   280 000002CA E8 [00000000]                   	CALL	_sheet_updown
   281 000002CF 6A 03                           	PUSH	3
   282 000002D1 FF B5 FFFFFEE8                  	PUSH	DWORD [-280+EBP]
   283 000002D7 E8 [00000000]                   	CALL	_sheet_updown
   284 000002DC 83 C4 20                        	ADD	ESP,32
   285 000002DF FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   286 000002E5 FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   287 000002EB FF B5 FFFFFEE8                  	PUSH	DWORD [-280+EBP]
   288 000002F1 E8 [00000000]                   	CALL	_sheet_slide
   289 000002F6 6A 00                           	PUSH	0
   290 000002F8 6A 00                           	PUSH	0
   291 000002FA FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   292 00000300 E8 [00000000]                   	CALL	_sheet_slide
   293 00000305 6A 40                           	PUSH	64
   294 00000307 6A 55                           	PUSH	85
   295 00000309 FF B5 FFFFFEE4                  	PUSH	DWORD [-284+EBP]
   296 0000030F E8 [00000000]                   	CALL	_sheet_slide
   297 00000314 83 C4 24                        	ADD	ESP,36
   298 00000317 68 [00000037]                   	PUSH	LC3
   299 0000031C 6A 10                           	PUSH	16
   300 0000031E 6A 00                           	PUSH	0
   301 00000320 6A 03                           	PUSH	3
   302 00000322 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   303 00000329 50                              	PUSH	EAX
   304 0000032A 57                              	PUSH	EDI
   305 0000032B E8 [00000000]                   	CALL	_draw_string
   306 00000330 E8 [00000000]                   	CALL	_mm_check
   307 00000335 50                              	PUSH	EAX
   308 00000336 68 [0000004C]                   	PUSH	LC4
   309 0000033B 53                              	PUSH	EBX
   310 0000033C E8 [00000000]                   	CALL	_sprintf
   311 00000341 83 C4 24                        	ADD	ESP,36
   312 00000344 53                              	PUSH	EBX
   313 00000345 6A 20                           	PUSH	32
   314 00000347 6A 00                           	PUSH	0
   315 00000349 6A 02                           	PUSH	2
   316 0000034B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   317 00000352 50                              	PUSH	EAX
   318 00000353 57                              	PUSH	EDI
   319 00000354 E8 [00000000]                   	CALL	_draw_string
   320 00000359 FF 35 00000FF8                  	PUSH	DWORD [4088]
   321 0000035F 68 [0000005E]                   	PUSH	LC5
   322 00000364 53                              	PUSH	EBX
   323 00000365 E8 [00000000]                   	CALL	_sprintf
   324 0000036A 83 C4 24                        	ADD	ESP,36
   325 0000036D 6A 10                           	PUSH	16
   326 0000036F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   327 00000376 50                              	PUSH	EAX
   328 00000377 6A 00                           	PUSH	0
   329 00000379 6A 00                           	PUSH	0
   330 0000037B 6A 00                           	PUSH	0
   331 0000037D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   332 00000384 50                              	PUSH	EAX
   333 00000385 57                              	PUSH	EDI
   334 00000386 E8 [00000000]                   	CALL	_draw_rect
   335 0000038B 53                              	PUSH	EBX
   336 0000038C 6A 00                           	PUSH	0
   337 0000038E 6A 00                           	PUSH	0
   338 00000390 6A 07                           	PUSH	7
   339 00000392 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   340 00000399 50                              	PUSH	EAX
   341 0000039A 57                              	PUSH	EDI
   342 0000039B E8 [00000000]                   	CALL	_draw_string
   343 000003A0 83 C4 34                        	ADD	ESP,52
   344 000003A3 6A 3F                           	PUSH	63
   345 000003A5 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   346 000003AC 50                              	PUSH	EAX
   347 000003AD 6A 30                           	PUSH	48
   348 000003AF 6A 00                           	PUSH	0
   349 000003B1 6A 01                           	PUSH	1
   350 000003B3 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   351 000003BA 50                              	PUSH	EAX
   352 000003BB 57                              	PUSH	EDI
   353 000003BC E8 [00000000]                   	CALL	_draw_rect
   354 000003C1 FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   355 000003C7 FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   356 000003CD 68 [00000067]                   	PUSH	LC6
   357 000003D2 53                              	PUSH	EBX
   358 000003D3 E8 [00000000]                   	CALL	_sprintf
   359 000003D8 83 C4 2C                        	ADD	ESP,44
   360 000003DB 53                              	PUSH	EBX
   361 000003DC 6A 30                           	PUSH	48
   362 000003DE 6A 00                           	PUSH	0
   363 000003E0 6A 07                           	PUSH	7
   364 000003E2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   365 000003E9 50                              	PUSH	EAX
   366 000003EA 57                              	PUSH	EDI
   367 000003EB E8 [00000000]                   	CALL	_draw_string
   368 000003F0 6A 00                           	PUSH	0
   369 000003F2 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   370 000003F9 50                              	PUSH	EAX
   371 000003FA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   372 00000401 50                              	PUSH	EAX
   373 00000402 6A 00                           	PUSH	0
   374 00000404 6A 00                           	PUSH	0
   375 00000406 FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   376 0000040C E8 [00000000]                   	CALL	_sheet_refresh
   377 00000411 83 C4 30                        	ADD	ESP,48
   378 00000414 6A 32                           	PUSH	50
   379 00000416 6A 01                           	PUSH	1
   380 00000418 E8 [00000000]                   	CALL	_start_timing
   381 0000041D E8 [00000000]                   	CALL	_task_init
   382 00000422 A3 [000001DC]                   	MOV	DWORD [_task_kernal],EAX
   383 00000427 E8 [00000000]                   	CALL	_task_alloc
   384 0000042C 68 00010000                     	PUSH	65536
   385 00000431 89 C6                           	MOV	ESI,EAX
   386 00000433 E8 [00000000]                   	CALL	_mm_malloc
   387 00000438 05 00010000                     	ADD	EAX,65536
   388 0000043D 89 46 48                        	MOV	DWORD [72+ESI],EAX
   389 00000440 C7 46 30 [00000000]             	MOV	DWORD [48+ESI],_task_b_main
   390 00000447 C7 46 58 00000008               	MOV	DWORD [88+ESI],8
   391 0000044E C7 46 5C 00000010               	MOV	DWORD [92+ESI],16
   392 00000455 C7 46 60 00000008               	MOV	DWORD [96+ESI],8
   393 0000045C C7 46 64 00000008               	MOV	DWORD [100+ESI],8
   394 00000463 C7 46 68 00000008               	MOV	DWORD [104+ESI],8
   395 0000046A C7 46 6C 00000008               	MOV	DWORD [108+ESI],8
   396 00000471 6A 00                           	PUSH	0
   397 00000473 6A 01                           	PUSH	1
   398 00000475 56                              	PUSH	ESI
   399 00000476 E8 [00000000]                   	CALL	_task_run
   400 0000047B 83 C4 18                        	ADD	ESP,24
   401 0000047E                                 L31:
   402 0000047E 68 [00000000]                   	PUSH	_timerfifo
   403 00000483 E8 [00000000]                   	CALL	_fifo8_status
   404 00000488 68 [00000000]                   	PUSH	_mousefifo
   405 0000048D 89 C3                           	MOV	EBX,EAX
   406 0000048F E8 [00000000]                   	CALL	_fifo8_status
   407 00000494 68 [00000000]                   	PUSH	_keyfifo
   408 00000499 09 C3                           	OR	EBX,EAX
   409 0000049B E8 [00000000]                   	CALL	_fifo8_status
   410 000004A0 83 C4 0C                        	ADD	ESP,12
   411 000004A3 09 C3                           	OR	EBX,EAX
   412 000004A5 75 0C                           	JNE	L11
   413 000004A7 FF 35 [000001DC]                	PUSH	DWORD [_task_kernal]
   414 000004AD E8 [00000000]                   	CALL	_task_sleep
   415 000004B2 58                              	POP	EAX
   416 000004B3                                 L11:
   417 000004B3 68 [00000000]                   	PUSH	_timerfifo
   418 000004B8 E8 [00000000]                   	CALL	_fifo8_status
   419 000004BD 5B                              	POP	EBX
   420 000004BE 85 C0                           	TEST	EAX,EAX
   421 000004C0 74 13                           	JE	L12
   422 000004C2 68 [00000000]                   	PUSH	_timerfifo
   423 000004C7 E8 [00000000]                   	CALL	_fifo8_get
   424 000004CC 59                              	POP	ECX
   425 000004CD FE C8                           	DEC	AL
   426 000004CF 0F 84 00000303                  	JE	L34
   427 000004D5                                 L12:
   428 000004D5 68 [00000000]                   	PUSH	_keyfifo
   429 000004DA E8 [00000000]                   	CALL	_fifo8_status
   430 000004DF 5B                              	POP	EBX
   431 000004E0 85 C0                           	TEST	EAX,EAX
   432 000004E2 0F 84 000000A6                  	JE	L16
   433 000004E8 68 [00000000]                   	PUSH	_keyfifo
   434 000004ED E8 [00000000]                   	CALL	_fifo8_get
   435 000004F2 0F B6 D8                        	MOVZX	EBX,AL
   436 000004F5 53                              	PUSH	EBX
   437 000004F6 66 C7 85 FFFFFEF2 0000          	MOV	WORD [-270+EBP],0
   438 000004FF E8 [00000000]                   	CALL	_key_to_char
   439 00000504 88 85 FFFFFEF2                  	MOV	BYTE [-270+EBP],AL
   440 0000050A 8D 85 FFFFFEF2                  	LEA	EAX,DWORD [-270+EBP]
   441 00000510 50                              	PUSH	EAX
   442 00000511 53                              	PUSH	EBX
   443 00000512 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   444 00000515 68 [00000077]                   	PUSH	LC7
   445 0000051A 53                              	PUSH	EBX
   446 0000051B E8 [00000000]                   	CALL	_sprintf
   447 00000520 6A 0F                           	PUSH	15
   448 00000522 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   449 00000529 50                              	PUSH	EAX
   450 0000052A 6A 00                           	PUSH	0
   451 0000052C 6A 00                           	PUSH	0
   452 0000052E 6A 00                           	PUSH	0
   453 00000530 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   454 00000537 50                              	PUSH	EAX
   455 00000538 57                              	PUSH	EDI
   456 00000539 E8 [00000000]                   	CALL	_draw_rect
   457 0000053E 83 C4 34                        	ADD	ESP,52
   458 00000541 53                              	PUSH	EBX
   459 00000542 6A 00                           	PUSH	0
   460 00000544 6A 00                           	PUSH	0
   461 00000546 6A 07                           	PUSH	7
   462 00000548 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   463 0000054F 50                              	PUSH	EAX
   464 00000550 57                              	PUSH	EDI
   465 00000551 E8 [00000000]                   	CALL	_draw_string
   466 00000556 6A 00                           	PUSH	0
   467 00000558 6A 10                           	PUSH	16
   468 0000055A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   469 00000561 50                              	PUSH	EAX
   470 00000562 6A 00                           	PUSH	0
   471 00000564 6A 00                           	PUSH	0
   472 00000566 FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   473 0000056C E8 [00000000]                   	CALL	_sheet_refresh
   474 00000571 83 C4 30                        	ADD	ESP,48
   475 00000574 80 BD FFFFFEF2 41               	CMP	BYTE [-270+EBP],65
   476 0000057B 0F 84 0000024B                  	JE	L35
   477 00000581                                 L17:
   478 00000581 80 BD FFFFFEF2 42               	CMP	BYTE [-270+EBP],66
   479 00000588 0F 84 0000022C                  	JE	L36
   480 0000058E                                 L16:
   481 0000058E 68 [00000000]                   	PUSH	_mousefifo
   482 00000593 E8 [00000000]                   	CALL	_fifo8_status
   483 00000598 5A                              	POP	EDX
   484 00000599 85 C0                           	TEST	EAX,EAX
   485 0000059B 0F 84 FFFFFEDD                  	JE	L31
   486 000005A1 68 [00000000]                   	PUSH	_mousefifo
   487 000005A6 E8 [00000000]                   	CALL	_fifo8_get
   488 000005AB 0F B6 C0                        	MOVZX	EAX,AL
   489 000005AE 50                              	PUSH	EAX
   490 000005AF 8D 85 FFFFFEF4                  	LEA	EAX,DWORD [-268+EBP]
   491 000005B5 50                              	PUSH	EAX
   492 000005B6 E8 [00000000]                   	CALL	_mouse_decode
   493 000005BB 83 C4 0C                        	ADD	ESP,12
   494 000005BE 85 C0                           	TEST	EAX,EAX
   495 000005C0 0F 84 FFFFFEB8                  	JE	L31
   496 000005C6 0F B6 85 FFFFFEF6               	MOVZX	EAX,BYTE [-266+EBP]
   497 000005CD 50                              	PUSH	EAX
   498 000005CE 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   499 000005D1 0F B6 85 FFFFFEF5               	MOVZX	EAX,BYTE [-267+EBP]
   500 000005D8 50                              	PUSH	EAX
   501 000005D9 0F B6 85 FFFFFEF4               	MOVZX	EAX,BYTE [-268+EBP]
   502 000005E0 50                              	PUSH	EAX
   503 000005E1 68 [0000009F]                   	PUSH	LC8
   504 000005E6 53                              	PUSH	EBX
   505 000005E7 E8 [00000000]                   	CALL	_sprintf
   506 000005EC 6A 0F                           	PUSH	15
   507 000005EE 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   508 000005F5 50                              	PUSH	EAX
   509 000005F6 6A 00                           	PUSH	0
   510 000005F8 6A 00                           	PUSH	0
   511 000005FA 6A 00                           	PUSH	0
   512 000005FC 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   513 00000603 50                              	PUSH	EAX
   514 00000604 57                              	PUSH	EDI
   515 00000605 E8 [00000000]                   	CALL	_draw_rect
   516 0000060A 83 C4 30                        	ADD	ESP,48
   517 0000060D 53                              	PUSH	EBX
   518 0000060E 6A 00                           	PUSH	0
   519 00000610 6A 00                           	PUSH	0
   520 00000612 6A 07                           	PUSH	7
   521 00000614 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   522 0000061B 50                              	PUSH	EAX
   523 0000061C 57                              	PUSH	EDI
   524 0000061D E8 [00000000]                   	CALL	_draw_string
   525 00000622 6A 00                           	PUSH	0
   526 00000624 6A 10                           	PUSH	16
   527 00000626 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   528 0000062D 50                              	PUSH	EAX
   529 0000062E 6A 00                           	PUSH	0
   530 00000630 6A 00                           	PUSH	0
   531 00000632 FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   532 00000638 E8 [00000000]                   	CALL	_sheet_refresh
   533 0000063D 8B 95 FFFFFEF8                  	MOV	EDX,DWORD [-264+EBP]
   534 00000643 8B 85 FFFFFEFC                  	MOV	EAX,DWORD [-260+EBP]
   535 00000649 83 C4 30                        	ADD	ESP,48
   536 0000064C 01 85 FFFFFEDC                  	ADD	DWORD [-292+EBP],EAX
   537 00000652 01 95 FFFFFEE0                  	ADD	DWORD [-288+EBP],EDX
   538 00000658 0F 88 0000014D                  	JS	L37
   539 0000065E                                 L21:
   540 0000065E 83 BD FFFFFEDC 00               	CMP	DWORD [-292+EBP],0
   541 00000665 0F 88 00000131                  	JS	L38
   542 0000066B                                 L22:
   543 0000066B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   544 00000672 48                              	DEC	EAX
   545 00000673 39 85 FFFFFEE0                  	CMP	DWORD [-288+EBP],EAX
   546 00000679 7E 06                           	JLE	L23
   547 0000067B 89 85 FFFFFEE0                  	MOV	DWORD [-288+EBP],EAX
   548 00000681                                 L23:
   549 00000681 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   550 00000688 48                              	DEC	EAX
   551 00000689 39 85 FFFFFEDC                  	CMP	DWORD [-292+EBP],EAX
   552 0000068F 7E 06                           	JLE	L24
   553 00000691 89 85 FFFFFEDC                  	MOV	DWORD [-292+EBP],EAX
   554 00000697                                 L24:
   555 00000697 FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   556 0000069D FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   557 000006A3 FF B5 FFFFFEE8                  	PUSH	DWORD [-280+EBP]
   558 000006A9 E8 [00000000]                   	CALL	_sheet_slide
   559 000006AE 6A 3F                           	PUSH	63
   560 000006B0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   561 000006B7 50                              	PUSH	EAX
   562 000006B8 6A 30                           	PUSH	48
   563 000006BA 6A 00                           	PUSH	0
   564 000006BC 6A 01                           	PUSH	1
   565 000006BE 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   566 000006C5 50                              	PUSH	EAX
   567 000006C6 57                              	PUSH	EDI
   568 000006C7 E8 [00000000]                   	CALL	_draw_rect
   569 000006CC 83 C4 28                        	ADD	ESP,40
   570 000006CF 8B 85 FFFFFF00                  	MOV	EAX,DWORD [-256+EBP]
   571 000006D5 A9 00000001                     	TEST	EAX,1
   572 000006DA 74 74                           	JE	L25
   573 000006DC FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   574 000006E2 FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   575 000006E8 68 [000000C7]                   	PUSH	LC9
   576 000006ED 53                              	PUSH	EBX
   577 000006EE E8 [00000000]                   	CALL	_sprintf
   578 000006F3 8B 85 FFFFFEDC                  	MOV	EAX,DWORD [-292+EBP]
   579 000006F9 83 E8 08                        	SUB	EAX,8
   580 000006FC 50                              	PUSH	EAX
   581 000006FD 8B 85 FFFFFEE0                  	MOV	EAX,DWORD [-288+EBP]
   582 00000703 83 E8 50                        	SUB	EAX,80
   583 00000706 50                              	PUSH	EAX
   584 00000707 FF B5 FFFFFEE4                  	PUSH	DWORD [-284+EBP]
   585 0000070D E8 [00000000]                   	CALL	_sheet_slide
   586 00000712 83 C4 1C                        	ADD	ESP,28
   587 00000715                                 L26:
   588 00000715 8D 45 C4                        	LEA	EAX,DWORD [-60+EBP]
   589 00000718 50                              	PUSH	EAX
   590 00000719 6A 30                           	PUSH	48
   591 0000071B 6A 00                           	PUSH	0
   592 0000071D 6A 07                           	PUSH	7
   593 0000071F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   594 00000726 50                              	PUSH	EAX
   595 00000727 57                              	PUSH	EDI
   596 00000728 E8 [00000000]                   	CALL	_draw_string
   597 0000072D 6A 00                           	PUSH	0
   598 0000072F 6A 40                           	PUSH	64
   599 00000731 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   600 00000738 50                              	PUSH	EAX
   601 00000739 6A 30                           	PUSH	48
   602 0000073B 6A 00                           	PUSH	0
   603 0000073D FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   604 00000743 E8 [00000000]                   	CALL	_sheet_refresh
   605 00000748 83 C4 30                        	ADD	ESP,48
   606 0000074B E9 FFFFFD2E                     	JMP	L31
   607 00000750                                 L25:
   608 00000750 83 F8 02                        	CMP	EAX,2
   609 00000753 74 34                           	JE	L39
   610 00000755 83 F8 04                        	CMP	EAX,4
   611 00000758 74 1C                           	JE	L40
   612 0000075A FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   613 00000760 FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   614 00000766 68 [00000067]                   	PUSH	LC6
   615 0000076B                                 L33:
   616 0000076B 53                              	PUSH	EBX
   617 0000076C E8 [00000000]                   	CALL	_sprintf
   618 00000771 83 C4 10                        	ADD	ESP,16
   619 00000774 EB 9F                           	JMP	L26
   620 00000776                                 L40:
   621 00000776 FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   622 0000077C FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   623 00000782 68 [000000D7]                   	PUSH	LC11
   624 00000787 EB E2                           	JMP	L33
   625 00000789                                 L39:
   626 00000789 FF B5 FFFFFEDC                  	PUSH	DWORD [-292+EBP]
   627 0000078F FF B5 FFFFFEE0                  	PUSH	DWORD [-288+EBP]
   628 00000795 68 [000000E7]                   	PUSH	LC10
   629 0000079A EB CF                           	JMP	L33
   630 0000079C                                 L38:
   631 0000079C C7 85 FFFFFEDC 00000000         	MOV	DWORD [-292+EBP],0
   632 000007A6 E9 FFFFFEC0                     	JMP	L22
   633 000007AB                                 L37:
   634 000007AB C7 85 FFFFFEE0 00000000         	MOV	DWORD [-288+EBP],0
   635 000007B5 E9 FFFFFEA4                     	JMP	L21
   636 000007BA                                 L36:
   637 000007BA 6A 00                           	PUSH	0
   638 000007BC 6A FF                           	PUSH	-1
   639 000007BE 56                              	PUSH	ESI
   640 000007BF E8 [00000000]                   	CALL	_task_run
   641 000007C4 83 C4 0C                        	ADD	ESP,12
   642 000007C7 E9 FFFFFDC2                     	JMP	L16
   643 000007CC                                 L35:
   644 000007CC 56                              	PUSH	ESI
   645 000007CD E8 [00000000]                   	CALL	_task_sleep
   646 000007D2 59                              	POP	ECX
   647 000007D3 E9 FFFFFDA9                     	JMP	L17
   648 000007D8                                 L34:
   649 000007D8 6A 32                           	PUSH	50
   650 000007DA 6A 01                           	PUSH	1
   651 000007DC E8 [00000000]                   	CALL	_start_timing
   652 000007E1 58                              	POP	EAX
   653 000007E2 5A                              	POP	EDX
   654 000007E3 80 BD FFFFFEDB 00               	CMP	BYTE [-293+EBP],0
   655 000007EA 0F 84 000000A7                  	JE	L14
   656 000007F0 6A 4F                           	PUSH	79
   657 000007F2 6A 07                           	PUSH	7
   658 000007F4 6A 40                           	PUSH	64
   659 000007F6 6A 00                           	PUSH	0
   660 000007F8 6A 0E                           	PUSH	14
   661 000007FA                                 L32:
   662 000007FA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   663 00000801 50                              	PUSH	EAX
   664 00000802 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   665 00000805 57                              	PUSH	EDI
   666 00000806 E8 [00000000]                   	CALL	_draw_rect
   667 0000080B 83 C4 1C                        	ADD	ESP,28
   668 0000080E 80 B5 FFFFFEDB 01               	XOR	BYTE [-293+EBP],1
   669 00000815 6A 00                           	PUSH	0
   670 00000817 6A 50                           	PUSH	80
   671 00000819 6A 08                           	PUSH	8
   672 0000081B 6A 40                           	PUSH	64
   673 0000081D 6A 00                           	PUSH	0
   674 0000081F FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   675 00000825 E8 [00000000]                   	CALL	_sheet_refresh
   676 0000082A E8 [00000000]                   	CALL	_mm_check
   677 0000082F 50                              	PUSH	EAX
   678 00000830 68 [0000004C]                   	PUSH	LC4
   679 00000835 53                              	PUSH	EBX
   680 00000836 E8 [00000000]                   	CALL	_sprintf
   681 0000083B 83 C4 24                        	ADD	ESP,36
   682 0000083E 6A 2F                           	PUSH	47
   683 00000840 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   684 00000847 50                              	PUSH	EAX
   685 00000848 6A 20                           	PUSH	32
   686 0000084A 6A 00                           	PUSH	0
   687 0000084C 6A 0E                           	PUSH	14
   688 0000084E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   689 00000855 50                              	PUSH	EAX
   690 00000856 57                              	PUSH	EDI
   691 00000857 E8 [00000000]                   	CALL	_draw_rect
   692 0000085C 53                              	PUSH	EBX
   693 0000085D 6A 20                           	PUSH	32
   694 0000085F 6A 00                           	PUSH	0
   695 00000861 6A 02                           	PUSH	2
   696 00000863 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   697 0000086A 50                              	PUSH	EAX
   698 0000086B 57                              	PUSH	EDI
   699 0000086C E8 [00000000]                   	CALL	_draw_string
   700 00000871 83 C4 34                        	ADD	ESP,52
   701 00000874 6A 00                           	PUSH	0
   702 00000876 6A 30                           	PUSH	48
   703 00000878 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   704 0000087F 50                              	PUSH	EAX
   705 00000880 6A 20                           	PUSH	32
   706 00000882 6A 00                           	PUSH	0
   707 00000884 FF B5 FFFFFEEC                  	PUSH	DWORD [-276+EBP]
   708 0000088A E8 [00000000]                   	CALL	_sheet_refresh
   709 0000088F 83 C4 18                        	ADD	ESP,24
   710 00000892 E9 FFFFFC3E                     	JMP	L12
   711 00000897                                 L14:
   712 00000897 6A 4F                           	PUSH	79
   713 00000899 6A 07                           	PUSH	7
   714 0000089B 6A 40                           	PUSH	64
   715 0000089D 6A 00                           	PUSH	0
   716 0000089F 6A 07                           	PUSH	7
   717 000008A1 E9 FFFFFF54                     	JMP	L32
   718                                          [SECTION .data]
   719 000000F7                                 LC12:
   720 000000F7 53 59 53 54 45 4D 20 45 52 52   	DB	"SYSTEM ERROR:",0x00
       00000101 4F 52 3A 00 
   721 00000105                                 LC13:
   722 00000105 3E 20 25 73 00                  	DB	"> %s",0x00
   723                                          [SECTION .text]
   724 000008A6                                 	GLOBAL	_sys_error
   725 000008A6                                 _sys_error:
   726 000008A6 55                              	PUSH	EBP
   727 000008A7 89 E5                           	MOV	EBP,ESP
   728 000008A9 53                              	PUSH	EBX
   729 000008AA 83 C4 80                        	ADD	ESP,-128
   730 000008AD 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   731 000008B4 48                              	DEC	EAX
   732 000008B5 8D 9D FFFFFF7C                  	LEA	EBX,DWORD [-132+EBP]
   733 000008BB 50                              	PUSH	EAX
   734 000008BC 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   735 000008C3 48                              	DEC	EAX
   736 000008C4 50                              	PUSH	EAX
   737 000008C5 6A 00                           	PUSH	0
   738 000008C7 6A 00                           	PUSH	0
   739 000008C9 6A 00                           	PUSH	0
   740 000008CB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   741 000008D2 50                              	PUSH	EAX
   742 000008D3 FF 35 00000FF8                  	PUSH	DWORD [4088]
   743 000008D9 E8 [00000000]                   	CALL	_draw_rect
   744 000008DE 68 [000000F7]                   	PUSH	LC12
   745 000008E3 6A 08                           	PUSH	8
   746 000008E5 6A 08                           	PUSH	8
   747 000008E7 6A 07                           	PUSH	7
   748 000008E9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   749 000008F0 50                              	PUSH	EAX
   750 000008F1 FF 35 00000FF8                  	PUSH	DWORD [4088]
   751 000008F7 E8 [00000000]                   	CALL	_draw_string
   752 000008FC 83 C4 34                        	ADD	ESP,52
   753 000008FF FF 75 08                        	PUSH	DWORD [8+EBP]
   754 00000902 68 [00000105]                   	PUSH	LC13
   755 00000907 53                              	PUSH	EBX
   756 00000908 E8 [00000000]                   	CALL	_sprintf
   757 0000090D 53                              	PUSH	EBX
   758 0000090E 6A 18                           	PUSH	24
   759 00000910 6A 08                           	PUSH	8
   760 00000912 6A 07                           	PUSH	7
   761 00000914 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   762 0000091B 50                              	PUSH	EAX
   763 0000091C FF 35 00000FF8                  	PUSH	DWORD [4088]
   764 00000922 E8 [00000000]                   	CALL	_draw_string
   765 00000927 83 C4 24                        	ADD	ESP,36
   766 0000092A                                 L45:
   767 0000092A E8 [00000000]                   	CALL	_io_hlt
   768 0000092F EB F9                           	JMP	L45
   769                                          [SECTION .data]
   770 0000010A 00 00                           	ALIGNB	4
   771 0000010C                                 _i.0:
   772 0000010C 00000001                        	DD	1
   773 00000110                                 LC14:
   774 00000110 4D 25 64 3A 20 25 73 00         	DB	"M%d: %s",0x00
   775                                          [SECTION .text]
   776 00000931                                 	GLOBAL	_sys_debug
   777 00000931                                 _sys_debug:
   778 00000931 55                              	PUSH	EBP
   779 00000932 89 E5                           	MOV	EBP,ESP
   780 00000934 53                              	PUSH	EBX
   781 00000935 83 EC 40                        	SUB	ESP,64
   782 00000938 FF 75 08                        	PUSH	DWORD [8+EBP]
   783 0000093B A1 [0000010C]                   	MOV	EAX,DWORD [_i.0]
   784 00000940 8D 5D BC                        	LEA	EBX,DWORD [-68+EBP]
   785 00000943 50                              	PUSH	EAX
   786 00000944 40                              	INC	EAX
   787 00000945 68 [00000110]                   	PUSH	LC14
   788 0000094A A3 [0000010C]                   	MOV	DWORD [_i.0],EAX
   789 0000094F 53                              	PUSH	EBX
   790 00000950 E8 [00000000]                   	CALL	_sprintf
   791 00000955 6A 1F                           	PUSH	31
   792 00000957 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   793 0000095E 48                              	DEC	EAX
   794 0000095F 50                              	PUSH	EAX
   795 00000960 6A 10                           	PUSH	16
   796 00000962 6A 00                           	PUSH	0
   797 00000964 6A 07                           	PUSH	7
   798 00000966 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   799 0000096D 50                              	PUSH	EAX
   800 0000096E FF 35 00000FF8                  	PUSH	DWORD [4088]
   801 00000974 E8 [00000000]                   	CALL	_draw_rect
   802 00000979 83 C4 2C                        	ADD	ESP,44
   803 0000097C 53                              	PUSH	EBX
   804 0000097D 6A 10                           	PUSH	16
   805 0000097F 6A 00                           	PUSH	0
   806 00000981 6A 00                           	PUSH	0
   807 00000983 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   808 0000098A 50                              	PUSH	EAX
   809 0000098B FF 35 00000FF8                  	PUSH	DWORD [4088]
   810 00000991 E8 [00000000]                   	CALL	_draw_string
   811 00000996 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   812 00000999 C9                              	LEAVE
   813 0000099A C3                              	RET
   814                                          [SECTION .data]
   815 00000118                                 _closebtn.1:
   816 00000118 4F 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"OOOOOOOOOOOOO@"
       00000122 4F 4F 4F 40 
   817 00000126 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       00000130 51 51 51 40 
   818 00000134 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       0000013E 51 51 51 40 
   819 00000142 4F 51 51 40 40 51 51 51 51 40   	DB	"OQQ@@QQQQ@@QQ@"
       0000014C 40 51 51 40 
   820 00000150 4F 51 51 51 40 40 51 51 40 40   	DB	"OQQQ@@QQ@@QQQ@"
       0000015A 51 51 51 40 
   821 0000015E 4F 51 51 51 51 40 40 40 40 51   	DB	"OQQQQ@@@@QQQQ@"
       00000168 51 51 51 40 
   822 0000016C 4F 51 51 51 51 51 40 40 51 51   	DB	"OQQQQQ@@QQQQQ@"
       00000176 51 51 51 40 
   823 0000017A 4F 51 51 51 51 40 40 40 40 51   	DB	"OQQQQ@@@@QQQQ@"
       00000184 51 51 51 40 
   824 00000188 4F 51 51 51 40 40 51 51 40 40   	DB	"OQQQ@@QQ@@QQQ@"
       00000192 51 51 51 40 
   825 00000196 4F 51 51 40 40 51 51 51 51 40   	DB	"OQQ@@QQQQ@@QQ@"
       000001A0 40 51 51 40 
   826 000001A4 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001AE 51 51 51 40 
   827 000001B2 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001BC 51 51 51 40 
   828 000001C0 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001CA 51 51 51 40 
   829 000001CE 40 40 40 40 40 40 40 40 40 40   	DB	"@@@@@@@@@@@@@@"
       000001D8 40 40 40 40 
   830                                          [SECTION .text]
   831 0000099B                                 	GLOBAL	_make_window
   832 0000099B                                 _make_window:
   833 0000099B 55                              	PUSH	EBP
   834 0000099C 89 E5                           	MOV	EBP,ESP
   835 0000099E 57                              	PUSH	EDI
   836 0000099F 56                              	PUSH	ESI
   837 000009A0 53                              	PUSH	EBX
   838 000009A1 51                              	PUSH	ECX
   839 000009A2 51                              	PUSH	ECX
   840 000009A3 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   841 000009A6 6A 00                           	PUSH	0
   842 000009A8 4F                              	DEC	EDI
   843 000009A9 8A 45 18                        	MOV	AL,BYTE [24+EBP]
   844 000009AC 57                              	PUSH	EDI
   845 000009AD 88 45 F3                        	MOV	BYTE [-13+EBP],AL
   846 000009B0 6A 00                           	PUSH	0
   847 000009B2 6A 00                           	PUSH	0
   848 000009B4 6A 08                           	PUSH	8
   849 000009B6 FF 75 0C                        	PUSH	DWORD [12+EBP]
   850 000009B9 FF 75 08                        	PUSH	DWORD [8+EBP]
   851 000009BC E8 [00000000]                   	CALL	_draw_rect
   852 000009C1 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
   853 000009C4 6A 01                           	PUSH	1
   854 000009C6 83 EE 02                        	SUB	ESI,2
   855 000009C9 56                              	PUSH	ESI
   856 000009CA 6A 01                           	PUSH	1
   857 000009CC 6A 01                           	PUSH	1
   858 000009CE 6A 07                           	PUSH	7
   859 000009D0 FF 75 0C                        	PUSH	DWORD [12+EBP]
   860 000009D3 FF 75 08                        	PUSH	DWORD [8+EBP]
   861 000009D6 E8 [00000000]                   	CALL	_draw_rect
   862 000009DB 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   863 000009DE 83 C4 38                        	ADD	ESP,56
   864 000009E1 48                              	DEC	EAX
   865 000009E2 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   866 000009E5 50                              	PUSH	EAX
   867 000009E6 6A 00                           	PUSH	0
   868 000009E8 6A 00                           	PUSH	0
   869 000009EA 6A 00                           	PUSH	0
   870 000009EC 6A 08                           	PUSH	8
   871 000009EE FF 75 0C                        	PUSH	DWORD [12+EBP]
   872 000009F1 FF 75 08                        	PUSH	DWORD [8+EBP]
   873 000009F4 E8 [00000000]                   	CALL	_draw_rect
   874 000009F9 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
   875 000009FC 83 EB 02                        	SUB	EBX,2
   876 000009FF 53                              	PUSH	EBX
   877 00000A00 6A 01                           	PUSH	1
   878 00000A02 6A 01                           	PUSH	1
   879 00000A04 6A 01                           	PUSH	1
   880 00000A06 6A 07                           	PUSH	7
   881 00000A08 FF 75 0C                        	PUSH	DWORD [12+EBP]
   882 00000A0B FF 75 08                        	PUSH	DWORD [8+EBP]
   883 00000A0E E8 [00000000]                   	CALL	_draw_rect
   884 00000A13 83 C4 38                        	ADD	ESP,56
   885 00000A16 53                              	PUSH	EBX
   886 00000A17 56                              	PUSH	ESI
   887 00000A18 6A 01                           	PUSH	1
   888 00000A1A 56                              	PUSH	ESI
   889 00000A1B 6A 0F                           	PUSH	15
   890 00000A1D FF 75 0C                        	PUSH	DWORD [12+EBP]
   891 00000A20 FF 75 08                        	PUSH	DWORD [8+EBP]
   892 00000A23 E8 [00000000]                   	CALL	_draw_rect
   893 00000A28 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   894 00000A2B 57                              	PUSH	EDI
   895 00000A2C 6A 00                           	PUSH	0
   896 00000A2E 57                              	PUSH	EDI
   897 00000A2F 6A 00                           	PUSH	0
   898 00000A31 FF 75 0C                        	PUSH	DWORD [12+EBP]
   899 00000A34 FF 75 08                        	PUSH	DWORD [8+EBP]
   900 00000A37 E8 [00000000]                   	CALL	_draw_rect
   901 00000A3C 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   902 00000A3F 83 C4 38                        	ADD	ESP,56
   903 00000A42 83 E8 03                        	SUB	EAX,3
   904 00000A45 50                              	PUSH	EAX
   905 00000A46 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   906 00000A49 83 E8 03                        	SUB	EAX,3
   907 00000A4C 50                              	PUSH	EAX
   908 00000A4D 6A 02                           	PUSH	2
   909 00000A4F 6A 02                           	PUSH	2
   910 00000A51 6A 08                           	PUSH	8
   911 00000A53 FF 75 0C                        	PUSH	DWORD [12+EBP]
   912 00000A56 FF 75 08                        	PUSH	DWORD [8+EBP]
   913 00000A59 E8 [00000000]                   	CALL	_draw_rect
   914 00000A5E 83 C4 1C                        	ADD	ESP,28
   915 00000A61 80 7D F3 00                     	CMP	BYTE [-13+EBP],0
   916 00000A65 0F 84 000000C1                  	JE	L48
   917 00000A6B 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   918 00000A6E 6A 14                           	PUSH	20
   919 00000A70 83 E8 04                        	SUB	EAX,4
   920 00000A73 50                              	PUSH	EAX
   921 00000A74 6A 03                           	PUSH	3
   922 00000A76 6A 03                           	PUSH	3
   923 00000A78 6A 0C                           	PUSH	12
   924 00000A7A                                 L69:
   925 00000A7A FF 75 0C                        	PUSH	DWORD [12+EBP]
   926 00000A7D FF 75 08                        	PUSH	DWORD [8+EBP]
   927 00000A80 31 FF                           	XOR	EDI,EDI
   928 00000A82 E8 [00000000]                   	CALL	_draw_rect
   929 00000A87 83 C4 1C                        	ADD	ESP,28
   930 00000A8A 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   931 00000A8D 83 EA 02                        	SUB	EDX,2
   932 00000A90 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   933 00000A93 52                              	PUSH	EDX
   934 00000A94 83 E8 02                        	SUB	EAX,2
   935 00000A97 50                              	PUSH	EAX
   936 00000A98 31 F6                           	XOR	ESI,ESI
   937 00000A9A 52                              	PUSH	EDX
   938 00000A9B 6A 01                           	PUSH	1
   939 00000A9D 6A 0F                           	PUSH	15
   940 00000A9F FF 75 0C                        	PUSH	DWORD [12+EBP]
   941 00000AA2 FF 75 08                        	PUSH	DWORD [8+EBP]
   942 00000AA5 E8 [00000000]                   	CALL	_draw_rect
   943 00000AAA 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   944 00000AAD 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   945 00000AB0 48                              	DEC	EAX
   946 00000AB1 4A                              	DEC	EDX
   947 00000AB2 52                              	PUSH	EDX
   948 00000AB3 50                              	PUSH	EAX
   949 00000AB4 52                              	PUSH	EDX
   950 00000AB5 6A 00                           	PUSH	0
   951 00000AB7 6A 00                           	PUSH	0
   952 00000AB9 FF 75 0C                        	PUSH	DWORD [12+EBP]
   953 00000ABC FF 75 08                        	PUSH	DWORD [8+EBP]
   954 00000ABF E8 [00000000]                   	CALL	_draw_rect
   955 00000AC4 83 C4 38                        	ADD	ESP,56
   956 00000AC7 FF 75 14                        	PUSH	DWORD [20+EBP]
   957 00000ACA 6A 04                           	PUSH	4
   958 00000ACC 6A 08                           	PUSH	8
   959 00000ACE 6A 07                           	PUSH	7
   960 00000AD0 FF 75 0C                        	PUSH	DWORD [12+EBP]
   961 00000AD3 FF 75 08                        	PUSH	DWORD [8+EBP]
   962 00000AD6 E8 [00000000]                   	CALL	_draw_string
   963 00000ADB 83 C4 18                        	ADD	ESP,24
   964 00000ADE 6B 4D 0C 05                     	IMUL	ECX,DWORD [12+EBP],5
   965 00000AE2                                 L64:
   966 00000AE2 8B 55 0C                        	MOV	EDX,DWORD [12+EBP]
   967 00000AE5 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   968 00000AE8 01 CA                           	ADD	EDX,ECX
   969 00000AEA 31 DB                           	XOR	EBX,EBX
   970 00000AEC 8D 54 10 ED                     	LEA	EDX,DWORD [-19+EAX+EDX*1]
   971 00000AF0                                 L63:
   972 00000AF0 8A 84 33 [00000118]             	MOV	AL,BYTE [_closebtn.1+EBX+ESI*1]
   973 00000AF7 3C 40                           	CMP	AL,64
   974 00000AF9 74 2D                           	JE	L70
   975 00000AFB 3C 51                           	CMP	AL,81
   976 00000AFD 74 25                           	JE	L71
   977 00000AFF 3C 4F                           	CMP	AL,79
   978 00000B01 74 1D                           	JE	L72
   979 00000B03                                 L59:
   980 00000B03 43                              	INC	EBX
   981 00000B04 88 02                           	MOV	BYTE [EDX],AL
   982 00000B06 42                              	INC	EDX
   983 00000B07 83 FB 0D                        	CMP	EBX,13
   984 00000B0A 7E E4                           	JLE	L63
   985 00000B0C 47                              	INC	EDI
   986 00000B0D 83 C6 0E                        	ADD	ESI,14
   987 00000B10 03 4D 0C                        	ADD	ECX,DWORD [12+EBP]
   988 00000B13 83 FF 0D                        	CMP	EDI,13
   989 00000B16 7E CA                           	JLE	L64
   990 00000B18 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   991 00000B1B 5B                              	POP	EBX
   992 00000B1C 5E                              	POP	ESI
   993 00000B1D 5F                              	POP	EDI
   994 00000B1E 5D                              	POP	EBP
   995 00000B1F C3                              	RET
   996 00000B20                                 L72:
   997 00000B20 B0 07                           	MOV	AL,7
   998 00000B22 EB DF                           	JMP	L59
   999 00000B24                                 L71:
  1000 00000B24 B0 08                           	MOV	AL,8
  1001 00000B26 EB DB                           	JMP	L59
  1002 00000B28                                 L70:
  1003 00000B28 31 C0                           	XOR	EAX,EAX
  1004 00000B2A EB D7                           	JMP	L59
  1005 00000B2C                                 L48:
  1006 00000B2C 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
  1007 00000B2F 6A 14                           	PUSH	20
  1008 00000B31 83 E8 04                        	SUB	EAX,4
  1009 00000B34 50                              	PUSH	EAX
  1010 00000B35 6A 03                           	PUSH	3
  1011 00000B37 6A 03                           	PUSH	3
  1012 00000B39 6A 0F                           	PUSH	15
  1013 00000B3B E9 FFFFFF3A                     	JMP	L69
  1014 00000B40                                 	GLOBAL	_task_kernal
  1015                                          [SECTION .data]
  1016 000001DC                                 	ALIGNB	4
  1017 000001DC                                 _task_kernal:
  1018 000001DC 00 00 00 00                     	RESB	4
