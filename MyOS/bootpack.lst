     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_memtest
     7 00000000                                 	EXTERN	_sprintf
     8 00000000                                 	EXTERN	_mm_init
     9 00000000                                 	EXTERN	_init_gdtidt
    10 00000000                                 	EXTERN	_init_pic
    11 00000000                                 	EXTERN	_io_sti
    12 00000000                                 	EXTERN	_init_keyboard
    13 00000000                                 	EXTERN	_enable_mouse
    14 00000000                                 	EXTERN	_keyfifo
    15 00000000                                 	EXTERN	_fifo8_init
    16 00000000                                 	EXTERN	_mousefifo
    17 00000000                                 	EXTERN	_io_out8
    18 00000000                                 	EXTERN	_init_palette
    19 00000000                                 	EXTERN	_shtctl_init
    20 00000000                                 	EXTERN	_sheet_alloc
    21 00000000                                 	EXTERN	_mm_malloc
    22 00000000                                 	EXTERN	_sheet_setbuf
    23 00000000                                 	EXTERN	_init_screen
    24 00000000                                 	EXTERN	_init_mouse_cursor
    25 00000000                                 	EXTERN	_sheet_updown
    26 00000000                                 	EXTERN	_sheet_slide
    27 00000000                                 	EXTERN	_draw_string
    28 00000000                                 	EXTERN	_mm_check
    29 00000000                                 	EXTERN	_draw_rect
    30 00000000                                 	EXTERN	_sheet_refresh
    31 00000000                                 	EXTERN	_fifo8_status
    32 00000000                                 	EXTERN	_io_cli
    33 00000000                                 	EXTERN	_fifo8_get
    34 00000000                                 	EXTERN	_mouse_decode
    35 00000000                                 	EXTERN	_io_hlt
    36 00000000                                 [FILE "bootpack.c"]
    37                                          [SECTION .data]
    38 00000000                                 LC0:
    39 00000000 25 64 20 4D 42 20 6D 65 6D 6F   	DB	"%d MB memory required for the OS",0x00
       0000000A 72 79 20 72 65 71 75 69 72 65 
       00000014 64 20 66 6F 72 20 74 68 65 20 
       0000001E 4F 53 00 
    40 00000021                                 LC1:
    41 00000021 46 69 72 73 74 20 57 69 6E 64   	DB	"First Window",0x00
       0000002B 6F 77 00 
    42 0000002E                                 LC2:
    43 0000002E 4D 79 4F 53 20 31 2E 30 20 2D   	DB	"MyOS 1.0 ----Richard",0x00
       00000038 2D 2D 2D 52 69 63 68 61 72 64 
       00000042 00 
    44 00000043                                 LC3:
    45 00000043 4D 65 6D 6F 72 79 20 73 62 72   	DB	"Memory sbrk: %x",0x00
       0000004D 6B 3A 20 25 78 00 
    46 00000053                                 LC4:
    47 00000053 57 65 6C 63 6F 6D 65 20 74 6F   	DB	"Welcome to use MyOS!",0x00
       0000005D 20 75 73 65 20 4D 79 4F 53 21 
       00000067 00 
    48 00000068                                 LC5:
    49 00000068 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,N)",0x00
       00000072 25 64 2C 4E 29 00 
    50 00000078                                 LC6:
    51 00000078 25 30 31 32 64 00               	DB	"%012d",0x00
    52 0000007E                                 LC7:
    53 0000007E 49 4E 54 20 32 31 20 28 49 52   	DB	"INT 21 (IRQ-1) : PS/2 keyboard [%x]",0x00
       00000088 51 2D 31 29 20 3A 20 50 53 2F 
       00000092 32 20 6B 65 79 62 6F 61 72 64 
       0000009C 20 5B 25 78 5D 00 
    54 000000A2                                 LC8:
    55 000000A2 49 4E 54 20 32 63 20 28 49 52   	DB	"INT 2c (IRQ-12) : PS/2 mouse [%x,%x,%x]",0x00
       000000AC 51 2D 31 32 29 20 3A 20 50 53 
       000000B6 2F 32 20 6D 6F 75 73 65 20 5B 
       000000C0 25 78 2C 25 78 2C 25 78 5D 00 
    56 000000CA                                 LC11:
    57 000000CA 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,M)",0x00
       000000D4 25 64 2C 4D 29 00 
    58 000000DA                                 LC10:
    59 000000DA 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,R)",0x00
       000000E4 25 64 2C 52 29 00 
    60 000000EA                                 LC9:
    61 000000EA 44 65 63 6F 64 65 28 25 64 2C   	DB	"Decode(%d,%d,L)",0x00
       000000F4 25 64 2C 4C 29 00 
    62                                          [SECTION .text]
    63 00000000                                 	GLOBAL	_HariMain
    64 00000000                                 _HariMain:
    65 00000000 55                              	PUSH	EBP
    66 00000001 89 E5                           	MOV	EBP,ESP
    67 00000003 57                              	PUSH	EDI
    68 00000004 56                              	PUSH	ESI
    69 00000005 53                              	PUSH	EBX
    70 00000006 81 EC 00000100                  	SUB	ESP,256
    71 0000000C C7 85 FFFFFEFC 00000000         	MOV	DWORD [-260+EBP],0
    72 00000016 68 DFFFFFFF                     	PUSH	-536870913
    73 0000001B 68 00400000                     	PUSH	4194304
    74 00000020 E8 [00000000]                   	CALL	_memtest
    75 00000025 5B                              	POP	EBX
    76 00000026 89 C6                           	MOV	ESI,EAX
    77 00000028 5F                              	POP	EDI
    78 00000029 3D 009FFFFF                     	CMP	EAX,10485759
    79 0000002E 77 19                           	JA	L2
    80 00000030 6A 0A                           	PUSH	10
    81 00000032 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    82 00000035 68 [00000000]                   	PUSH	LC0
    83 0000003A 53                              	PUSH	EBX
    84 0000003B E8 [00000000]                   	CALL	_sprintf
    85 00000040 53                              	PUSH	EBX
    86 00000041 E8 000005FD                     	CALL	_sys_error
    87 00000046 83 C4 10                        	ADD	ESP,16
    88 00000049                                 L2:
    89 00000049 56                              	PUSH	ESI
    90 0000004A 68 00400000                     	PUSH	4194304
    91 0000004F E8 [00000000]                   	CALL	_mm_init
    92 00000054 E8 [00000000]                   	CALL	_init_gdtidt
    93 00000059 E8 [00000000]                   	CALL	_init_pic
    94 0000005E E8 [00000000]                   	CALL	_io_sti
    95 00000063 E8 [00000000]                   	CALL	_init_keyboard
    96 00000068 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
    97 0000006E 50                              	PUSH	EAX
    98 0000006F E8 [00000000]                   	CALL	_enable_mouse
    99 00000074 8D 45 A4                        	LEA	EAX,DWORD [-92+EBP]
   100 00000077 50                              	PUSH	EAX
   101 00000078 6A 20                           	PUSH	32
   102 0000007A 68 [00000000]                   	PUSH	_keyfifo
   103 0000007F E8 [00000000]                   	CALL	_fifo8_init
   104 00000084 8D 85 FFFFFF24                  	LEA	EAX,DWORD [-220+EBP]
   105 0000008A 50                              	PUSH	EAX
   106 0000008B 68 00000080                     	PUSH	128
   107 00000090 68 [00000000]                   	PUSH	_mousefifo
   108 00000095 E8 [00000000]                   	CALL	_fifo8_init
   109 0000009A 83 C4 24                        	ADD	ESP,36
   110 0000009D 68 000000F9                     	PUSH	249
   111 000000A2 6A 21                           	PUSH	33
   112 000000A4 E8 [00000000]                   	CALL	_io_out8
   113 000000A9 68 000000EF                     	PUSH	239
   114 000000AE 68 000000A1                     	PUSH	161
   115 000000B3 E8 [00000000]                   	CALL	_io_out8
   116 000000B8 E8 [00000000]                   	CALL	_init_palette
   117 000000BD 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   118 000000C4 50                              	PUSH	EAX
   119 000000C5 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   120 000000CC 50                              	PUSH	EAX
   121 000000CD FF 35 00000FF8                  	PUSH	DWORD [4088]
   122 000000D3 E8 [00000000]                   	CALL	_shtctl_init
   123 000000D8 E8 [00000000]                   	CALL	_sheet_alloc
   124 000000DD 89 85 FFFFFF10                  	MOV	DWORD [-240+EBP],EAX
   125 000000E3 E8 [00000000]                   	CALL	_sheet_alloc
   126 000000E8 89 85 FFFFFF0C                  	MOV	DWORD [-244+EBP],EAX
   127 000000EE E8 [00000000]                   	CALL	_sheet_alloc
   128 000000F3 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   129 000000FA 89 85 FFFFFF08                  	MOV	DWORD [-248+EBP],EAX
   130 00000100 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   131 00000107 0F AF C2                        	IMUL	EAX,EDX
   132 0000010A 50                              	PUSH	EAX
   133 0000010B E8 [00000000]                   	CALL	_mm_malloc
   134 00000110 83 C4 20                        	ADD	ESP,32
   135 00000113 68 00000100                     	PUSH	256
   136 00000118 89 85 FFFFFF04                  	MOV	DWORD [-252+EBP],EAX
   137 0000011E E8 [00000000]                   	CALL	_mm_malloc
   138 00000123 68 00002BF2                     	PUSH	11250
   139 00000128 89 C3                           	MOV	EBX,EAX
   140 0000012A E8 [00000000]                   	CALL	_mm_malloc
   141 0000012F 68 000000FF                     	PUSH	255
   142 00000134 89 85 FFFFFF00                  	MOV	DWORD [-256+EBP],EAX
   143 0000013A 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   144 00000141 50                              	PUSH	EAX
   145 00000142 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   146 00000149 50                              	PUSH	EAX
   147 0000014A FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   148 00000150 FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   149 00000156 E8 [00000000]                   	CALL	_sheet_setbuf
   150 0000015B 68 000000FF                     	PUSH	255
   151 00000160 6A 10                           	PUSH	16
   152 00000162 6A 10                           	PUSH	16
   153 00000164 53                              	PUSH	EBX
   154 00000165 FF B5 FFFFFF0C                  	PUSH	DWORD [-244+EBP]
   155 0000016B E8 [00000000]                   	CALL	_sheet_setbuf
   156 00000170 83 C4 30                        	ADD	ESP,48
   157 00000173 68 000000FF                     	PUSH	255
   158 00000178 6A 4B                           	PUSH	75
   159 0000017A 68 00000096                     	PUSH	150
   160 0000017F FF B5 FFFFFF00                  	PUSH	DWORD [-256+EBP]
   161 00000185 FF B5 FFFFFF08                  	PUSH	DWORD [-248+EBP]
   162 0000018B E8 [00000000]                   	CALL	_sheet_setbuf
   163 00000190 68 [00000021]                   	PUSH	LC1
   164 00000195 6A 4B                           	PUSH	75
   165 00000197 68 00000096                     	PUSH	150
   166 0000019C FF B5 FFFFFF00                  	PUSH	DWORD [-256+EBP]
   167 000001A2 E8 00000531                     	CALL	_make_window
   168 000001A7 83 C4 24                        	ADD	ESP,36
   169 000001AA 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   170 000001B1 50                              	PUSH	EAX
   171 000001B2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   172 000001B9 50                              	PUSH	EAX
   173 000001BA FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   174 000001C0 E8 [00000000]                   	CALL	_init_screen
   175 000001C5 6A FF                           	PUSH	-1
   176 000001C7 53                              	PUSH	EBX
   177 000001C8 BB 00000002                     	MOV	EBX,2
   178 000001CD E8 [00000000]                   	CALL	_init_mouse_cursor
   179 000001D2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   180 000001D9 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   181 000001DC 89 C8                           	MOV	EAX,ECX
   182 000001DE 99                              	CDQ
   183 000001DF F7 FB                           	IDIV	EBX
   184 000001E1 89 C7                           	MOV	EDI,EAX
   185 000001E3 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   186 000001EA 6A 00                           	PUSH	0
   187 000001EC 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   188 000001EF 89 C8                           	MOV	EAX,ECX
   189 000001F1 99                              	CDQ
   190 000001F2 F7 FB                           	IDIV	EBX
   191 000001F4 FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   192 000001FA 89 C6                           	MOV	ESI,EAX
   193 000001FC 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   194 000001FF E8 [00000000]                   	CALL	_sheet_updown
   195 00000204 6A 01                           	PUSH	1
   196 00000206 FF B5 FFFFFF08                  	PUSH	DWORD [-248+EBP]
   197 0000020C E8 [00000000]                   	CALL	_sheet_updown
   198 00000211 83 C4 24                        	ADD	ESP,36
   199 00000214 6A 02                           	PUSH	2
   200 00000216 FF B5 FFFFFF0C                  	PUSH	DWORD [-244+EBP]
   201 0000021C E8 [00000000]                   	CALL	_sheet_updown
   202 00000221 56                              	PUSH	ESI
   203 00000222 57                              	PUSH	EDI
   204 00000223 FF B5 FFFFFF0C                  	PUSH	DWORD [-244+EBP]
   205 00000229 E8 [00000000]                   	CALL	_sheet_slide
   206 0000022E 6A 00                           	PUSH	0
   207 00000230 6A 00                           	PUSH	0
   208 00000232 FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   209 00000238 E8 [00000000]                   	CALL	_sheet_slide
   210 0000023D 83 C4 20                        	ADD	ESP,32
   211 00000240 6A 40                           	PUSH	64
   212 00000242 6A 55                           	PUSH	85
   213 00000244 FF B5 FFFFFF08                  	PUSH	DWORD [-248+EBP]
   214 0000024A E8 [00000000]                   	CALL	_sheet_slide
   215 0000024F 68 [0000002E]                   	PUSH	LC2
   216 00000254 6A 10                           	PUSH	16
   217 00000256 6A 00                           	PUSH	0
   218 00000258 6A 03                           	PUSH	3
   219 0000025A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   220 00000261 50                              	PUSH	EAX
   221 00000262 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   222 00000268 E8 [00000000]                   	CALL	_draw_string
   223 0000026D 83 C4 24                        	ADD	ESP,36
   224 00000270 E8 [00000000]                   	CALL	_mm_check
   225 00000275 50                              	PUSH	EAX
   226 00000276 68 [00000043]                   	PUSH	LC3
   227 0000027B 53                              	PUSH	EBX
   228 0000027C E8 [00000000]                   	CALL	_sprintf
   229 00000281 53                              	PUSH	EBX
   230 00000282 6A 20                           	PUSH	32
   231 00000284 6A 00                           	PUSH	0
   232 00000286 6A 02                           	PUSH	2
   233 00000288 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   234 0000028F 50                              	PUSH	EAX
   235 00000290 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   236 00000296 E8 [00000000]                   	CALL	_draw_string
   237 0000029B 83 C4 24                        	ADD	ESP,36
   238 0000029E 68 [00000053]                   	PUSH	LC4
   239 000002A3 53                              	PUSH	EBX
   240 000002A4 E8 [00000000]                   	CALL	_sprintf
   241 000002A9 6A 10                           	PUSH	16
   242 000002AB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   243 000002B2 50                              	PUSH	EAX
   244 000002B3 6A 00                           	PUSH	0
   245 000002B5 6A 00                           	PUSH	0
   246 000002B7 6A 00                           	PUSH	0
   247 000002B9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   248 000002C0 50                              	PUSH	EAX
   249 000002C1 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   250 000002C7 E8 [00000000]                   	CALL	_draw_rect
   251 000002CC 83 C4 24                        	ADD	ESP,36
   252 000002CF 53                              	PUSH	EBX
   253 000002D0 6A 00                           	PUSH	0
   254 000002D2 6A 00                           	PUSH	0
   255 000002D4 6A 07                           	PUSH	7
   256 000002D6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   257 000002DD 50                              	PUSH	EAX
   258 000002DE FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   259 000002E4 E8 [00000000]                   	CALL	_draw_string
   260 000002E9 6A 40                           	PUSH	64
   261 000002EB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   262 000002F2 50                              	PUSH	EAX
   263 000002F3 6A 30                           	PUSH	48
   264 000002F5 6A 00                           	PUSH	0
   265 000002F7 6A 01                           	PUSH	1
   266 000002F9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   267 00000300 50                              	PUSH	EAX
   268 00000301 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   269 00000307 E8 [00000000]                   	CALL	_draw_rect
   270 0000030C 83 C4 34                        	ADD	ESP,52
   271 0000030F 56                              	PUSH	ESI
   272 00000310 57                              	PUSH	EDI
   273 00000311 68 [00000068]                   	PUSH	LC5
   274 00000316 53                              	PUSH	EBX
   275 00000317 E8 [00000000]                   	CALL	_sprintf
   276 0000031C 53                              	PUSH	EBX
   277 0000031D 6A 30                           	PUSH	48
   278 0000031F 6A 00                           	PUSH	0
   279 00000321 6A 07                           	PUSH	7
   280 00000323 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   281 0000032A 50                              	PUSH	EAX
   282 0000032B FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   283 00000331 E8 [00000000]                   	CALL	_draw_string
   284 00000336 83 C4 28                        	ADD	ESP,40
   285 00000339 6A 00                           	PUSH	0
   286 0000033B 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   287 00000342 50                              	PUSH	EAX
   288 00000343 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   289 0000034A 50                              	PUSH	EAX
   290 0000034B 6A 00                           	PUSH	0
   291 0000034D 6A 00                           	PUSH	0
   292 0000034F FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   293 00000355 E8 [00000000]                   	CALL	_sheet_refresh
   294 0000035A 83 C4 18                        	ADD	ESP,24
   295 0000035D                                 L22:
   296 0000035D 6A 28                           	PUSH	40
   297 0000035F 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   298 00000362 6A 7D                           	PUSH	125
   299 00000364 6A 19                           	PUSH	25
   300 00000366 6A 19                           	PUSH	25
   301 00000368 6A 08                           	PUSH	8
   302 0000036A 68 00000096                     	PUSH	150
   303 0000036F FF B5 FFFFFF00                  	PUSH	DWORD [-256+EBP]
   304 00000375 E8 [00000000]                   	CALL	_draw_rect
   305 0000037A FF 85 FFFFFEFC                  	INC	DWORD [-260+EBP]
   306 00000380 FF B5 FFFFFEFC                  	PUSH	DWORD [-260+EBP]
   307 00000386 68 [00000078]                   	PUSH	LC6
   308 0000038B 53                              	PUSH	EBX
   309 0000038C E8 [00000000]                   	CALL	_sprintf
   310 00000391 83 C4 28                        	ADD	ESP,40
   311 00000394 53                              	PUSH	EBX
   312 00000395 6A 19                           	PUSH	25
   313 00000397 6A 19                           	PUSH	25
   314 00000399 6A 00                           	PUSH	0
   315 0000039B 68 00000096                     	PUSH	150
   316 000003A0 FF B5 FFFFFF00                  	PUSH	DWORD [-256+EBP]
   317 000003A6 E8 [00000000]                   	CALL	_draw_string
   318 000003AB 6A 00                           	PUSH	0
   319 000003AD 6A 29                           	PUSH	41
   320 000003AF 6A 7D                           	PUSH	125
   321 000003B1 6A 19                           	PUSH	25
   322 000003B3 6A 19                           	PUSH	25
   323 000003B5 FF B5 FFFFFF08                  	PUSH	DWORD [-248+EBP]
   324 000003BB E8 [00000000]                   	CALL	_sheet_refresh
   325 000003C0 83 C4 30                        	ADD	ESP,48
   326 000003C3 68 [00000000]                   	PUSH	_keyfifo
   327 000003C8 E8 [00000000]                   	CALL	_fifo8_status
   328 000003CD 68 [00000000]                   	PUSH	_mousefifo
   329 000003D2 89 C3                           	MOV	EBX,EAX
   330 000003D4 E8 [00000000]                   	CALL	_fifo8_status
   331 000003D9 5A                              	POP	EDX
   332 000003DA 09 C3                           	OR	EBX,EAX
   333 000003DC 59                              	POP	ECX
   334 000003DD 0F 84 00000256                  	JE	L26
   335 000003E3 E8 [00000000]                   	CALL	_io_cli
   336 000003E8 68 [00000000]                   	PUSH	_keyfifo
   337 000003ED E8 [00000000]                   	CALL	_fifo8_status
   338 000003F2 59                              	POP	ECX
   339 000003F3 85 C0                           	TEST	EAX,EAX
   340 000003F5 0F 84 0000008E                  	JE	L8
   341 000003FB 68 [00000000]                   	PUSH	_keyfifo
   342 00000400 E8 [00000000]                   	CALL	_fifo8_get
   343 00000405 88 C3                           	MOV	BL,AL
   344 00000407 E8 [00000000]                   	CALL	_io_sti
   345 0000040C 0F B6 C3                        	MOVZX	EAX,BL
   346 0000040F 50                              	PUSH	EAX
   347 00000410 8D 55 C4                        	LEA	EDX,DWORD [-60+EBP]
   348 00000413 68 [0000007E]                   	PUSH	LC7
   349 00000418 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   350 0000041B 52                              	PUSH	EDX
   351 0000041C E8 [00000000]                   	CALL	_sprintf
   352 00000421 6A 0F                           	PUSH	15
   353 00000423 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   354 0000042A 50                              	PUSH	EAX
   355 0000042B 6A 00                           	PUSH	0
   356 0000042D 6A 00                           	PUSH	0
   357 0000042F 6A 00                           	PUSH	0
   358 00000431 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   359 00000438 50                              	PUSH	EAX
   360 00000439 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   361 0000043F E8 [00000000]                   	CALL	_draw_rect
   362 00000444 83 C4 2C                        	ADD	ESP,44
   363 00000447 53                              	PUSH	EBX
   364 00000448 6A 00                           	PUSH	0
   365 0000044A 6A 00                           	PUSH	0
   366 0000044C 6A 07                           	PUSH	7
   367 0000044E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   368 00000455 50                              	PUSH	EAX
   369 00000456 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   370 0000045C E8 [00000000]                   	CALL	_draw_string
   371 00000461 6A 00                           	PUSH	0
   372 00000463 6A 10                           	PUSH	16
   373 00000465 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   374 0000046C 50                              	PUSH	EAX
   375 0000046D 6A 00                           	PUSH	0
   376 0000046F                                 L25:
   377 0000046F 6A 00                           	PUSH	0
   378 00000471 FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   379 00000477 E8 [00000000]                   	CALL	_sheet_refresh
   380 0000047C 83 C4 30                        	ADD	ESP,48
   381 0000047F                                 L9:
   382 0000047F E8 [00000000]                   	CALL	_io_sti
   383 00000484 E9 FFFFFED4                     	JMP	L22
   384 00000489                                 L8:
   385 00000489 68 [00000000]                   	PUSH	_mousefifo
   386 0000048E E8 [00000000]                   	CALL	_fifo8_status
   387 00000493 5A                              	POP	EDX
   388 00000494 85 C0                           	TEST	EAX,EAX
   389 00000496 74 E7                           	JE	L9
   390 00000498 68 [00000000]                   	PUSH	_mousefifo
   391 0000049D E8 [00000000]                   	CALL	_fifo8_get
   392 000004A2 88 C3                           	MOV	BL,AL
   393 000004A4 E8 [00000000]                   	CALL	_io_sti
   394 000004A9 0F B6 C3                        	MOVZX	EAX,BL
   395 000004AC 50                              	PUSH	EAX
   396 000004AD 8D 85 FFFFFF14                  	LEA	EAX,DWORD [-236+EBP]
   397 000004B3 50                              	PUSH	EAX
   398 000004B4 E8 [00000000]                   	CALL	_mouse_decode
   399 000004B9 83 C4 0C                        	ADD	ESP,12
   400 000004BC 85 C0                           	TEST	EAX,EAX
   401 000004BE 74 BF                           	JE	L9
   402 000004C0 0F B6 85 FFFFFF16               	MOVZX	EAX,BYTE [-234+EBP]
   403 000004C7 50                              	PUSH	EAX
   404 000004C8 0F B6 85 FFFFFF15               	MOVZX	EAX,BYTE [-235+EBP]
   405 000004CF 50                              	PUSH	EAX
   406 000004D0 0F B6 85 FFFFFF14               	MOVZX	EAX,BYTE [-236+EBP]
   407 000004D7 50                              	PUSH	EAX
   408 000004D8 8D 45 C4                        	LEA	EAX,DWORD [-60+EBP]
   409 000004DB 68 [000000A2]                   	PUSH	LC8
   410 000004E0 50                              	PUSH	EAX
   411 000004E1 E8 [00000000]                   	CALL	_sprintf
   412 000004E6 6A 0F                           	PUSH	15
   413 000004E8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   414 000004EF 50                              	PUSH	EAX
   415 000004F0 6A 00                           	PUSH	0
   416 000004F2 6A 00                           	PUSH	0
   417 000004F4 6A 00                           	PUSH	0
   418 000004F6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   419 000004FD 50                              	PUSH	EAX
   420 000004FE FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   421 00000504 E8 [00000000]                   	CALL	_draw_rect
   422 00000509 8D 55 C4                        	LEA	EDX,DWORD [-60+EBP]
   423 0000050C 83 C4 30                        	ADD	ESP,48
   424 0000050F 52                              	PUSH	EDX
   425 00000510 6A 00                           	PUSH	0
   426 00000512 6A 00                           	PUSH	0
   427 00000514 6A 07                           	PUSH	7
   428 00000516 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   429 0000051D 50                              	PUSH	EAX
   430 0000051E FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   431 00000524 E8 [00000000]                   	CALL	_draw_string
   432 00000529 6A 00                           	PUSH	0
   433 0000052B 6A 10                           	PUSH	16
   434 0000052D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   435 00000534 50                              	PUSH	EAX
   436 00000535 6A 00                           	PUSH	0
   437 00000537 6A 00                           	PUSH	0
   438 00000539 FF B5 FFFFFF10                  	PUSH	DWORD [-240+EBP]
   439 0000053F E8 [00000000]                   	CALL	_sheet_refresh
   440 00000544 83 C4 30                        	ADD	ESP,48
   441 00000547 03 B5 FFFFFF1C                  	ADD	ESI,DWORD [-228+EBP]
   442 0000054D 03 BD FFFFFF18                  	ADD	EDI,DWORD [-232+EBP]
   443 00000553 0F 88 000000D9                  	JS	L27
   444 00000559                                 L12:
   445 00000559 85 F6                           	TEST	ESI,ESI
   446 0000055B 0F 88 000000CA                  	JS	L28
   447 00000561                                 L13:
   448 00000561 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   449 00000568 48                              	DEC	EAX
   450 00000569 39 C7                           	CMP	EDI,EAX
   451 0000056B 7E 02                           	JLE	L14
   452 0000056D 89 C7                           	MOV	EDI,EAX
   453 0000056F                                 L14:
   454 0000056F 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   455 00000576 48                              	DEC	EAX
   456 00000577 39 C6                           	CMP	ESI,EAX
   457 00000579 7E 02                           	JLE	L15
   458 0000057B 89 C6                           	MOV	ESI,EAX
   459 0000057D                                 L15:
   460 0000057D 56                              	PUSH	ESI
   461 0000057E 57                              	PUSH	EDI
   462 0000057F FF B5 FFFFFF0C                  	PUSH	DWORD [-244+EBP]
   463 00000585 E8 [00000000]                   	CALL	_sheet_slide
   464 0000058A 6A 3F                           	PUSH	63
   465 0000058C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   466 00000593 50                              	PUSH	EAX
   467 00000594 6A 30                           	PUSH	48
   468 00000596 6A 00                           	PUSH	0
   469 00000598 6A 01                           	PUSH	1
   470 0000059A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   471 000005A1 50                              	PUSH	EAX
   472 000005A2 FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   473 000005A8 E8 [00000000]                   	CALL	_draw_rect
   474 000005AD 83 C4 28                        	ADD	ESP,40
   475 000005B0 8B 85 FFFFFF20                  	MOV	EAX,DWORD [-224+EBP]
   476 000005B6 83 F8 01                        	CMP	EAX,1
   477 000005B9 74 67                           	JE	L29
   478 000005BB 83 F8 02                        	CMP	EAX,2
   479 000005BE 74 55                           	JE	L30
   480 000005C0 83 F8 04                        	CMP	EAX,4
   481 000005C3 74 43                           	JE	L31
   482 000005C5 56                              	PUSH	ESI
   483 000005C6 57                              	PUSH	EDI
   484 000005C7 68 [00000068]                   	PUSH	LC5
   485 000005CC                                 L24:
   486 000005CC 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   487 000005CF 53                              	PUSH	EBX
   488 000005D0                                 L23:
   489 000005D0 E8 [00000000]                   	CALL	_sprintf
   490 000005D5 8D 45 C4                        	LEA	EAX,DWORD [-60+EBP]
   491 000005D8 83 C4 10                        	ADD	ESP,16
   492 000005DB 50                              	PUSH	EAX
   493 000005DC 6A 30                           	PUSH	48
   494 000005DE 6A 00                           	PUSH	0
   495 000005E0 6A 07                           	PUSH	7
   496 000005E2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   497 000005E9 50                              	PUSH	EAX
   498 000005EA FF B5 FFFFFF04                  	PUSH	DWORD [-252+EBP]
   499 000005F0 E8 [00000000]                   	CALL	_draw_string
   500 000005F5 6A 00                           	PUSH	0
   501 000005F7 6A 40                           	PUSH	64
   502 000005F9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   503 00000600 50                              	PUSH	EAX
   504 00000601 6A 30                           	PUSH	48
   505 00000603 E9 FFFFFE67                     	JMP	L25
   506 00000608                                 L31:
   507 00000608 56                              	PUSH	ESI
   508 00000609 8D 55 C4                        	LEA	EDX,DWORD [-60+EBP]
   509 0000060C 57                              	PUSH	EDI
   510 0000060D 68 [000000CA]                   	PUSH	LC11
   511 00000612 52                              	PUSH	EDX
   512 00000613 EB BB                           	JMP	L23
   513 00000615                                 L30:
   514 00000615 56                              	PUSH	ESI
   515 00000616 8D 45 C4                        	LEA	EAX,DWORD [-60+EBP]
   516 00000619 57                              	PUSH	EDI
   517 0000061A 68 [000000DA]                   	PUSH	LC10
   518 0000061F 50                              	PUSH	EAX
   519 00000620 EB AE                           	JMP	L23
   520 00000622                                 L29:
   521 00000622 56                              	PUSH	ESI
   522 00000623 57                              	PUSH	EDI
   523 00000624 68 [000000EA]                   	PUSH	LC9
   524 00000629 EB A1                           	JMP	L24
   525 0000062B                                 L28:
   526 0000062B 31 F6                           	XOR	ESI,ESI
   527 0000062D E9 FFFFFF2F                     	JMP	L13
   528 00000632                                 L27:
   529 00000632 31 FF                           	XOR	EDI,EDI
   530 00000634 E9 FFFFFF20                     	JMP	L12
   531 00000639                                 L26:
   532 00000639 E8 [00000000]                   	CALL	_io_hlt
   533 0000063E E9 FFFFFD1A                     	JMP	L22
   534                                          [SECTION .data]
   535 000000FA                                 LC12:
   536 000000FA 53 59 53 54 45 4D 20 45 52 52   	DB	"SYSTEM ERROR:",0x00
       00000104 4F 52 3A 00 
   537 00000108                                 LC13:
   538 00000108 3E 20 25 73 00                  	DB	"> %s",0x00
   539                                          [SECTION .text]
   540 00000643                                 	GLOBAL	_sys_error
   541 00000643                                 _sys_error:
   542 00000643 55                              	PUSH	EBP
   543 00000644 89 E5                           	MOV	EBP,ESP
   544 00000646 53                              	PUSH	EBX
   545 00000647 83 C4 80                        	ADD	ESP,-128
   546 0000064A 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   547 00000651 48                              	DEC	EAX
   548 00000652 8D 9D FFFFFF7C                  	LEA	EBX,DWORD [-132+EBP]
   549 00000658 50                              	PUSH	EAX
   550 00000659 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   551 00000660 48                              	DEC	EAX
   552 00000661 50                              	PUSH	EAX
   553 00000662 6A 00                           	PUSH	0
   554 00000664 6A 00                           	PUSH	0
   555 00000666 6A 00                           	PUSH	0
   556 00000668 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   557 0000066F 50                              	PUSH	EAX
   558 00000670 FF 35 00000FF8                  	PUSH	DWORD [4088]
   559 00000676 E8 [00000000]                   	CALL	_draw_rect
   560 0000067B 68 [000000FA]                   	PUSH	LC12
   561 00000680 53                              	PUSH	EBX
   562 00000681 E8 [00000000]                   	CALL	_sprintf
   563 00000686 83 C4 24                        	ADD	ESP,36
   564 00000689 53                              	PUSH	EBX
   565 0000068A 6A 08                           	PUSH	8
   566 0000068C 6A 08                           	PUSH	8
   567 0000068E 6A 07                           	PUSH	7
   568 00000690 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   569 00000697 50                              	PUSH	EAX
   570 00000698 FF 35 00000FF8                  	PUSH	DWORD [4088]
   571 0000069E E8 [00000000]                   	CALL	_draw_string
   572 000006A3 FF 75 08                        	PUSH	DWORD [8+EBP]
   573 000006A6 68 [00000108]                   	PUSH	LC13
   574 000006AB 53                              	PUSH	EBX
   575 000006AC E8 [00000000]                   	CALL	_sprintf
   576 000006B1 83 C4 24                        	ADD	ESP,36
   577 000006B4 53                              	PUSH	EBX
   578 000006B5 6A 18                           	PUSH	24
   579 000006B7 6A 08                           	PUSH	8
   580 000006B9 6A 07                           	PUSH	7
   581 000006BB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   582 000006C2 50                              	PUSH	EAX
   583 000006C3 FF 35 00000FF8                  	PUSH	DWORD [4088]
   584 000006C9 E8 [00000000]                   	CALL	_draw_string
   585 000006CE 83 C4 18                        	ADD	ESP,24
   586 000006D1                                 L36:
   587 000006D1 E8 [00000000]                   	CALL	_io_hlt
   588 000006D6 EB F9                           	JMP	L36
   589                                          [SECTION .data]
   590 0000010D                                 _closebtn.0:
   591 0000010D 4F 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"OOOOOOOOOOOOO@"
       00000117 4F 4F 4F 40 
   592 0000011B 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       00000125 51 51 51 40 
   593 00000129 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       00000133 51 51 51 40 
   594 00000137 4F 51 51 40 40 51 51 51 51 40   	DB	"OQQ@@QQQQ@@QQ@"
       00000141 40 51 51 40 
   595 00000145 4F 51 51 51 40 40 51 51 40 40   	DB	"OQQQ@@QQ@@QQQ@"
       0000014F 51 51 51 40 
   596 00000153 4F 51 51 51 51 40 40 40 40 51   	DB	"OQQQQ@@@@QQQQ@"
       0000015D 51 51 51 40 
   597 00000161 4F 51 51 51 51 51 40 40 51 51   	DB	"OQQQQQ@@QQQQQ@"
       0000016B 51 51 51 40 
   598 0000016F 4F 51 51 51 51 40 40 40 40 51   	DB	"OQQQQ@@@@QQQQ@"
       00000179 51 51 51 40 
   599 0000017D 4F 51 51 51 40 40 51 51 40 40   	DB	"OQQQ@@QQ@@QQQ@"
       00000187 51 51 51 40 
   600 0000018B 4F 51 51 40 40 51 51 51 51 40   	DB	"OQQ@@QQQQ@@QQ@"
       00000195 40 51 51 40 
   601 00000199 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001A3 51 51 51 40 
   602 000001A7 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001B1 51 51 51 40 
   603 000001B5 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQ@"
       000001BF 51 51 51 40 
   604 000001C3 40 40 40 40 40 40 40 40 40 40   	DB	"@@@@@@@@@@@@@@"
       000001CD 40 40 40 40 
   605                                          [SECTION .text]
   606 000006D8                                 	GLOBAL	_make_window
   607 000006D8                                 _make_window:
   608 000006D8 55                              	PUSH	EBP
   609 000006D9 89 E5                           	MOV	EBP,ESP
   610 000006DB 57                              	PUSH	EDI
   611 000006DC 56                              	PUSH	ESI
   612 000006DD 53                              	PUSH	EBX
   613 000006DE 83 EC 10                        	SUB	ESP,16
   614 000006E1 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   615 000006E4 6A 00                           	PUSH	0
   616 000006E6 8D 43 FF                        	LEA	EAX,DWORD [-1+EBX]
   617 000006E9 8D 7B FE                        	LEA	EDI,DWORD [-2+EBX]
   618 000006EC 50                              	PUSH	EAX
   619 000006ED 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   620 000006F0 6A 00                           	PUSH	0
   621 000006F2 6A 00                           	PUSH	0
   622 000006F4 6A 08                           	PUSH	8
   623 000006F6 53                              	PUSH	EBX
   624 000006F7 FF 75 08                        	PUSH	DWORD [8+EBP]
   625 000006FA E8 [00000000]                   	CALL	_draw_rect
   626 000006FF 6A 01                           	PUSH	1
   627 00000701 57                              	PUSH	EDI
   628 00000702 6A 01                           	PUSH	1
   629 00000704 6A 01                           	PUSH	1
   630 00000706 6A 07                           	PUSH	7
   631 00000708 53                              	PUSH	EBX
   632 00000709 FF 75 08                        	PUSH	DWORD [8+EBP]
   633 0000070C E8 [00000000]                   	CALL	_draw_rect
   634 00000711 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   635 00000714 83 C4 38                        	ADD	ESP,56
   636 00000717 48                              	DEC	EAX
   637 00000718 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
   638 0000071B 50                              	PUSH	EAX
   639 0000071C 6A 00                           	PUSH	0
   640 0000071E 6A 00                           	PUSH	0
   641 00000720 6A 00                           	PUSH	0
   642 00000722 6A 08                           	PUSH	8
   643 00000724 53                              	PUSH	EBX
   644 00000725 FF 75 08                        	PUSH	DWORD [8+EBP]
   645 00000728 E8 [00000000]                   	CALL	_draw_rect
   646 0000072D 8B 75 10                        	MOV	ESI,DWORD [16+EBP]
   647 00000730 83 EE 02                        	SUB	ESI,2
   648 00000733 56                              	PUSH	ESI
   649 00000734 6A 01                           	PUSH	1
   650 00000736 6A 01                           	PUSH	1
   651 00000738 6A 01                           	PUSH	1
   652 0000073A 6A 07                           	PUSH	7
   653 0000073C 53                              	PUSH	EBX
   654 0000073D FF 75 08                        	PUSH	DWORD [8+EBP]
   655 00000740 E8 [00000000]                   	CALL	_draw_rect
   656 00000745 83 C4 38                        	ADD	ESP,56
   657 00000748 56                              	PUSH	ESI
   658 00000749 57                              	PUSH	EDI
   659 0000074A 6A 01                           	PUSH	1
   660 0000074C 57                              	PUSH	EDI
   661 0000074D 6A 0F                           	PUSH	15
   662 0000074F 53                              	PUSH	EBX
   663 00000750 FF 75 08                        	PUSH	DWORD [8+EBP]
   664 00000753 E8 [00000000]                   	CALL	_draw_rect
   665 00000758 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   666 0000075B FF 75 EC                        	PUSH	DWORD [-20+EBP]
   667 0000075E 6A 00                           	PUSH	0
   668 00000760 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   669 00000763 6A 00                           	PUSH	0
   670 00000765 53                              	PUSH	EBX
   671 00000766 FF 75 08                        	PUSH	DWORD [8+EBP]
   672 00000769 E8 [00000000]                   	CALL	_draw_rect
   673 0000076E 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   674 00000771 83 C4 38                        	ADD	ESP,56
   675 00000774 83 E8 03                        	SUB	EAX,3
   676 00000777 50                              	PUSH	EAX
   677 00000778 8D 43 FD                        	LEA	EAX,DWORD [-3+EBX]
   678 0000077B 50                              	PUSH	EAX
   679 0000077C 6A 02                           	PUSH	2
   680 0000077E 6A 02                           	PUSH	2
   681 00000780 6A 08                           	PUSH	8
   682 00000782 53                              	PUSH	EBX
   683 00000783 FF 75 08                        	PUSH	DWORD [8+EBP]
   684 00000786 E8 [00000000]                   	CALL	_draw_rect
   685 0000078B 8D 43 FC                        	LEA	EAX,DWORD [-4+EBX]
   686 0000078E 6A 14                           	PUSH	20
   687 00000790 50                              	PUSH	EAX
   688 00000791 6A 03                           	PUSH	3
   689 00000793 6A 03                           	PUSH	3
   690 00000795 6A 0E                           	PUSH	14
   691 00000797 53                              	PUSH	EBX
   692 00000798 FF 75 08                        	PUSH	DWORD [8+EBP]
   693 0000079B E8 [00000000]                   	CALL	_draw_rect
   694 000007A0 83 C4 38                        	ADD	ESP,56
   695 000007A3 56                              	PUSH	ESI
   696 000007A4 57                              	PUSH	EDI
   697 000007A5 31 FF                           	XOR	EDI,EDI
   698 000007A7 56                              	PUSH	ESI
   699 000007A8 6A 01                           	PUSH	1
   700 000007AA 6A 0F                           	PUSH	15
   701 000007AC 53                              	PUSH	EBX
   702 000007AD FF 75 08                        	PUSH	DWORD [8+EBP]
   703 000007B0 E8 [00000000]                   	CALL	_draw_rect
   704 000007B5 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   705 000007B8 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   706 000007BB FF 75 E8                        	PUSH	DWORD [-24+EBP]
   707 000007BE 6A 00                           	PUSH	0
   708 000007C0 6A 00                           	PUSH	0
   709 000007C2 53                              	PUSH	EBX
   710 000007C3 FF 75 08                        	PUSH	DWORD [8+EBP]
   711 000007C6 E8 [00000000]                   	CALL	_draw_rect
   712 000007CB 83 C4 38                        	ADD	ESP,56
   713 000007CE FF 75 14                        	PUSH	DWORD [20+EBP]
   714 000007D1 6A 04                           	PUSH	4
   715 000007D3 6A 08                           	PUSH	8
   716 000007D5 6A 07                           	PUSH	7
   717 000007D7 53                              	PUSH	EBX
   718 000007D8 FF 75 08                        	PUSH	DWORD [8+EBP]
   719 000007DB E8 [00000000]                   	CALL	_draw_string
   720 000007E0 83 C4 18                        	ADD	ESP,24
   721 000007E3 6B CB 05                        	IMUL	ECX,EBX,5
   722 000007E6 C7 45 F0 00000000               	MOV	DWORD [-16+EBP],0
   723 000007ED                                 L52:
   724 000007ED 8D 14 19                        	LEA	EDX,DWORD [ECX+EBX*1]
   725 000007F0 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   726 000007F3 31 F6                           	XOR	ESI,ESI
   727 000007F5 8D 54 10 ED                     	LEA	EDX,DWORD [-19+EAX+EDX*1]
   728 000007F9                                 L51:
   729 000007F9 8A 84 3E [0000010D]             	MOV	AL,BYTE [_closebtn.0+ESI+EDI*1]
   730 00000800 3C 40                           	CMP	AL,64
   731 00000802 74 2F                           	JE	L57
   732 00000804 3C 51                           	CMP	AL,81
   733 00000806 74 27                           	JE	L58
   734 00000808 3C 4F                           	CMP	AL,79
   735 0000080A 74 1F                           	JE	L59
   736 0000080C                                 L47:
   737 0000080C 46                              	INC	ESI
   738 0000080D 88 02                           	MOV	BYTE [EDX],AL
   739 0000080F 42                              	INC	EDX
   740 00000810 83 FE 0D                        	CMP	ESI,13
   741 00000813 7E E4                           	JLE	L51
   742 00000815 FF 45 F0                        	INC	DWORD [-16+EBP]
   743 00000818 01 D9                           	ADD	ECX,EBX
   744 0000081A 83 C7 0E                        	ADD	EDI,14
   745 0000081D 83 7D F0 0D                     	CMP	DWORD [-16+EBP],13
   746 00000821 7E CA                           	JLE	L52
   747 00000823 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   748 00000826 5B                              	POP	EBX
   749 00000827 5E                              	POP	ESI
   750 00000828 5F                              	POP	EDI
   751 00000829 5D                              	POP	EBP
   752 0000082A C3                              	RET
   753 0000082B                                 L59:
   754 0000082B B0 07                           	MOV	AL,7
   755 0000082D EB DD                           	JMP	L47
   756 0000082F                                 L58:
   757 0000082F B0 08                           	MOV	AL,8
   758 00000831 EB D9                           	JMP	L47
   759 00000833                                 L57:
   760 00000833 31 C0                           	XOR	EAX,EAX
   761 00000835 EB D5                           	JMP	L47
