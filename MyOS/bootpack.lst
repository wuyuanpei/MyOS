     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_sheet_alloc
     7 00000000                                 	EXTERN	_mm_malloc
     8 00000000                                 	EXTERN	_sheet_setbuf
     9 00000000                                 	EXTERN	_make_window
    10 00000000                                 	EXTERN	_sheet_updown
    11 00000000                                 	EXTERN	_sheet_slide
    12 00000000                                 	EXTERN	_start_timing
    13 00000000                                 	EXTERN	_draw_rect
    14 00000000                                 	EXTERN	_sprintf
    15 00000000                                 	EXTERN	_draw_string
    16 00000000                                 	EXTERN	_sheet_refresh
    17 00000000                                 	EXTERN	_task_now
    18 00000000                                 	EXTERN	_fifo_status
    19 00000000                                 	EXTERN	_fifo_get
    20 00000000                                 	EXTERN	_task_sleep
    21 00000000                                 	EXTERN	_memtest
    22 00000000                                 	EXTERN	_mm_init
    23 00000000                                 	EXTERN	_init_gdtidt
    24 00000000                                 	EXTERN	_init_pic
    25 00000000                                 	EXTERN	_io_sti
    26 00000000                                 	EXTERN	_init_pit
    27 00000000                                 	EXTERN	_init_keyboard
    28 00000000                                 	EXTERN	_enable_mouse
    29 00000000                                 	EXTERN	_io_out8
    30 00000000                                 	EXTERN	_task_init
    31 00000000                                 	EXTERN	_init_palette
    32 00000000                                 	EXTERN	_shtctl_init
    33 00000000                                 	EXTERN	_init_screen
    34 00000000                                 	EXTERN	_init_mouse_cursor
    35 00000000                                 	EXTERN	_task_alloc
    36 00000000                                 	EXTERN	_task_run
    37 00000000                                 	EXTERN	_task_console_main
    38 00000000                                 	EXTERN	_mouse_decode
    39 00000000                                 	EXTERN	_key_to_char
    40 00000000                                 	EXTERN	_ctrl
    41 00000000                                 	EXTERN	_program_addr
    42 00000000                                 	EXTERN	_fifo_put
    43 00000000                                 	EXTERN	_io_cli
    44 00000000                                 	EXTERN	_end_app
    45 00000000                                 	EXTERN	_print_error
    46 00000000                                 	EXTERN	_set_kb_led
    47 00000000                                 	EXTERN	_mtask_on
    48 00000000                                 	EXTERN	_io_hlt
    49 00000000                                 [FILE "bootpack.c"]
    50                                          [SECTION .data]
    51 00000000                                 LC0:
    52 00000000 53 79 73 74 65 6D 20 54 69 6D   	DB	"System Timer",0x00
       0000000A 65 72 00 
    53 0000000D                                 LC1:
    54 0000000D 25 30 32 64 25 30 39 64 00      	DB	"%02d%09d",0x00
    55                                          [SECTION .text]
    56 00000000                                 	GLOBAL	_task_b_main
    57 00000000                                 _task_b_main:
    58 00000000 55                              	PUSH	EBP
    59 00000001 89 E5                           	MOV	EBP,ESP
    60 00000003 57                              	PUSH	EDI
    61 00000004 56                              	PUSH	ESI
    62 00000005 53                              	PUSH	EBX
    63 00000006 83 EC 20                        	SUB	ESP,32
    64 00000009 E8 [00000000]                   	CALL	_sheet_alloc
    65 0000000E 68 00001D4C                     	PUSH	7500
    66 00000013 89 C7                           	MOV	EDI,EAX
    67 00000015 E8 [00000000]                   	CALL	_mm_malloc
    68 0000001A 68 000000FF                     	PUSH	255
    69 0000001F 6A 32                           	PUSH	50
    70 00000021 89 C6                           	MOV	ESI,EAX
    71 00000023 68 00000096                     	PUSH	150
    72 00000028 50                              	PUSH	EAX
    73 00000029 57                              	PUSH	EDI
    74 0000002A E8 [00000000]                   	CALL	_sheet_setbuf
    75 0000002F 6A 00                           	PUSH	0
    76 00000031 68 [00000000]                   	PUSH	LC0
    77 00000036 6A 32                           	PUSH	50
    78 00000038 68 00000096                     	PUSH	150
    79 0000003D 56                              	PUSH	ESI
    80 0000003E E8 [00000000]                   	CALL	_make_window
    81 00000043 83 C4 2C                        	ADD	ESP,44
    82 00000046 FF 35 00268010                  	PUSH	DWORD [2523152]
    83 0000004C 57                              	PUSH	EDI
    84 0000004D E8 [00000000]                   	CALL	_sheet_updown
    85 00000052 6A 64                           	PUSH	100
    86 00000054 6A 64                           	PUSH	100
    87 00000056 57                              	PUSH	EDI
    88 00000057 E8 [00000000]                   	CALL	_sheet_slide
    89 0000005C 6A 01                           	PUSH	1
    90 0000005E 6A 01                           	PUSH	1
    91 00000060 E8 [00000000]                   	CALL	_start_timing
    92 00000065 83 C4 1C                        	ADD	ESP,28
    93 00000068                                 L7:
    94 00000068 6A 28                           	PUSH	40
    95 0000006A 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
    96 0000006D 6A 7D                           	PUSH	125
    97 0000006F 6A 19                           	PUSH	25
    98 00000071 6A 19                           	PUSH	25
    99 00000073 6A 08                           	PUSH	8
   100 00000075 68 00000096                     	PUSH	150
   101 0000007A 56                              	PUSH	ESI
   102 0000007B E8 [00000000]                   	CALL	_draw_rect
   103 00000080 FF 35 0026A418                  	PUSH	DWORD [2532376]
   104 00000086 FF 35 0026A414                  	PUSH	DWORD [2532372]
   105 0000008C 68 [0000000D]                   	PUSH	LC1
   106 00000091 53                              	PUSH	EBX
   107 00000092 E8 [00000000]                   	CALL	_sprintf
   108 00000097 83 C4 2C                        	ADD	ESP,44
   109 0000009A 53                              	PUSH	EBX
   110 0000009B 6A 19                           	PUSH	25
   111 0000009D 6A 19                           	PUSH	25
   112 0000009F 6A 00                           	PUSH	0
   113 000000A1 68 00000096                     	PUSH	150
   114 000000A6 56                              	PUSH	ESI
   115 000000A7 E8 [00000000]                   	CALL	_draw_string
   116 000000AC 6A 00                           	PUSH	0
   117 000000AE 6A 29                           	PUSH	41
   118 000000B0 6A 7D                           	PUSH	125
   119 000000B2 6A 19                           	PUSH	25
   120 000000B4 6A 19                           	PUSH	25
   121 000000B6 57                              	PUSH	EDI
   122 000000B7 E8 [00000000]                   	CALL	_sheet_refresh
   123 000000BC 83 C4 30                        	ADD	ESP,48
   124 000000BF E8 [00000000]                   	CALL	_task_now
   125 000000C4 83 C0 10                        	ADD	EAX,16
   126 000000C7 50                              	PUSH	EAX
   127 000000C8 E8 [00000000]                   	CALL	_fifo_status
   128 000000CD 5A                              	POP	EDX
   129 000000CE 85 C0                           	TEST	EAX,EAX
   130 000000D0 74 1F                           	JE	L8
   131 000000D2 E8 [00000000]                   	CALL	_task_now
   132 000000D7 83 C0 10                        	ADD	EAX,16
   133 000000DA 50                              	PUSH	EAX
   134 000000DB E8 [00000000]                   	CALL	_fifo_get
   135 000000E0 6A 01                           	PUSH	1
   136 000000E2 6A 01                           	PUSH	1
   137 000000E4 E8 [00000000]                   	CALL	_start_timing
   138 000000E9 83 C4 0C                        	ADD	ESP,12
   139 000000EC E9 FFFFFF77                     	JMP	L7
   140 000000F1                                 L8:
   141 000000F1 E8 [00000000]                   	CALL	_task_now
   142 000000F6 50                              	PUSH	EAX
   143 000000F7 E8 [00000000]                   	CALL	_task_sleep
   144 000000FC 58                              	POP	EAX
   145 000000FD E9 FFFFFF66                     	JMP	L7
   146                                          [SECTION .data]
   147 00000016                                 LC2:
   148 00000016 3E 20 4D 65 6D 6F 72 79 20 74   	DB	"> Memory tested [0]",0x00
       00000020 65 73 74 65 64 20 5B 30 5D 00 
   149 0000002A                                 LC3:
   150 0000002A 25 64 20 4D 42 20 6D 65 6D 6F   	DB	"%d MB memory required for the OS",0x00
       00000034 72 79 20 72 65 71 75 69 72 65 
       0000003E 64 20 66 6F 72 20 74 68 65 20 
       00000048 4F 53 00 
   151 0000004B                                 LC4:
   152 0000004B 3E 20 4D 65 6D 6F 72 79 20 69   	DB	"> Memory initialized [1]",0x00
       00000055 6E 69 74 69 61 6C 69 7A 65 64 
       0000005F 20 5B 31 5D 00 
   153 00000064                                 LC5:
   154 00000064 3E 20 47 44 54 2F 49 44 54 20   	DB	"> GDT/IDT initialized [2]",0x00
       0000006E 69 6E 69 74 69 61 6C 69 7A 65 
       00000078 64 20 5B 32 5D 00 
   155 0000007E                                 LC6:
   156 0000007E 3E 20 50 49 43 20 69 6E 69 74   	DB	"> PIC initialized [3]",0x00
       00000088 69 61 6C 69 7A 65 64 20 5B 33 
       00000092 5D 00 
   157 00000094                                 LC7:
   158 00000094 3E 20 43 50 55 20 69 6E 74 65   	DB	"> CPU interrupt flag initialized [4]",0x00
       0000009E 72 72 75 70 74 20 66 6C 61 67 
       000000A8 20 69 6E 69 74 69 61 6C 69 7A 
       000000B2 65 64 20 5B 34 5D 00 
   159 000000B9                                 LC8:
   160 000000B9 3E 20 50 49 54 20 69 6E 69 74   	DB	"> PIT initialized [5]",0x00
       000000C3 69 61 6C 69 7A 65 64 20 5B 35 
       000000CD 5D 00 
   161 000000CF                                 LC9:
   162 000000CF 3E 20 4B 65 79 62 6F 61 72 64   	DB	"> Keyboard/Mouse initialized [6]",0x00
       000000D9 2F 4D 6F 75 73 65 20 69 6E 69 
       000000E3 74 69 61 6C 69 7A 65 64 20 5B 
       000000ED 36 5D 00 
   163 000000F0                                 LC10:
   164 000000F0 3E 20 4D 75 6C 74 69 74 61 73   	DB	"> Multitask controller initialized [7]",0x00
       000000FA 6B 20 63 6F 6E 74 72 6F 6C 6C 
       00000104 65 72 20 69 6E 69 74 69 61 6C 
       0000010E 69 7A 65 64 20 5B 37 5D 00 
   165 00000117                                 LC11:
   166 00000117 3E 20 53 63 72 65 65 6E 20 70   	DB	"> Screen palette initialized [8]",0x00
       00000121 61 6C 65 74 74 65 20 69 6E 69 
       0000012B 74 69 61 6C 69 7A 65 64 20 5B 
       00000135 38 5D 00 
   167 00000138                                 LC12:
   168 00000138 3E 20 53 68 65 65 74 20 63 6F   	DB	"> Sheet controller initialized [9]",0x00
       00000142 6E 74 72 6F 6C 6C 65 72 20 69 
       0000014C 6E 69 74 69 61 6C 69 7A 65 64 
       00000156 20 5B 39 5D 00 
   169 0000015B                                 LC13:
   170 0000015B 3E 20 53 63 72 65 65 6E 2F 53   	DB	"> Screen/Sheets initialized [10]",0x00
       00000165 68 65 65 74 73 20 69 6E 69 74 
       0000016F 69 61 6C 69 7A 65 64 20 5B 31 
       00000179 30 5D 00 
   171 0000017C                                 LC14:
   172 0000017C 4D 79 4F 53 20 31 2E 30 20 2D   	DB	"MyOS 1.0 ----Richard",0x00
       00000186 2D 2D 2D 52 69 63 68 61 72 64 
       00000190 00 
   173 00000191                                 LC15:
   174 00000191 76 72 61 6D 3A 20 25 78 00      	DB	"vram: %x",0x00
   175 0000019A                                 LC18:
   176 0000019A 49 4E 54 20 32 63 20 28 49 52   	DB	"INT 2c (IRQ-12) : PS/2 mouse [%x,%x,%x]",0x00
       000001A4 51 2D 31 32 29 20 3A 20 50 53 
       000001AE 2F 32 20 6D 6F 75 73 65 20 5B 
       000001B8 25 78 2C 25 78 2C 25 78 5D 00 
   177 000001C2                                 LC17:
   178 000001C2 49 4E 54 20 32 31 20 28 49 52   	DB	"INT 21 (IRQ-1) : PS/2 keyboard [%x, %s]",0x00
       000001CC 51 2D 31 29 20 3A 20 50 53 2F 
       000001D6 32 20 6B 65 79 62 6F 61 72 64 
       000001E0 20 5B 25 78 2C 20 25 73 5D 00 
   179 000001EA                                 LC16:
   180 000001EA 50 72 6F 67 72 61 6D 20 54 65   	DB	"Program Terminated",0x00
       000001F4 72 6D 69 6E 61 74 65 64 00 
   181                                          [SECTION .text]
   182 00000102                                 	GLOBAL	_HariMain
   183 00000102                                 _HariMain:
   184 00000102 55                              	PUSH	EBP
   185 00000103 89 E5                           	MOV	EBP,ESP
   186 00000105 57                              	PUSH	EDI
   187 00000106 56                              	PUSH	ESI
   188 00000107 53                              	PUSH	EBX
   189 00000108 83 EC 60                        	SUB	ESP,96
   190 0000010B 68 DFFFFFFF                     	PUSH	-536870913
   191 00000110 68 00400000                     	PUSH	4194304
   192 00000115 E8 [00000000]                   	CALL	_memtest
   193 0000011A 68 [00000016]                   	PUSH	LC2
   194 0000011F 6A 00                           	PUSH	0
   195 00000121 89 C6                           	MOV	ESI,EAX
   196 00000123 6A 00                           	PUSH	0
   197 00000125 6A 07                           	PUSH	7
   198 00000127 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   199 0000012E 50                              	PUSH	EAX
   200 0000012F FF 35 00000FF8                  	PUSH	DWORD [4088]
   201 00000135 E8 [00000000]                   	CALL	_draw_string
   202 0000013A 83 C4 20                        	ADD	ESP,32
   203 0000013D 81 FE 009FFFFF                  	CMP	ESI,10485759
   204 00000143 77 19                           	JA	L10
   205 00000145 6A 0A                           	PUSH	10
   206 00000147 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   207 0000014A 68 [0000002A]                   	PUSH	LC3
   208 0000014F 53                              	PUSH	EBX
   209 00000150 E8 [00000000]                   	CALL	_sprintf
   210 00000155 53                              	PUSH	EBX
   211 00000156 E8 00000670                     	CALL	_sys_error
   212 0000015B 83 C4 10                        	ADD	ESP,16
   213 0000015E                                 L10:
   214 0000015E 56                              	PUSH	ESI
   215 0000015F 68 00400000                     	PUSH	4194304
   216 00000164 E8 [00000000]                   	CALL	_mm_init
   217 00000169 68 [0000004B]                   	PUSH	LC4
   218 0000016E 6A 10                           	PUSH	16
   219 00000170 6A 00                           	PUSH	0
   220 00000172 6A 07                           	PUSH	7
   221 00000174 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   222 0000017B 50                              	PUSH	EAX
   223 0000017C FF 35 00000FF8                  	PUSH	DWORD [4088]
   224 00000182 E8 [00000000]                   	CALL	_draw_string
   225 00000187 83 C4 20                        	ADD	ESP,32
   226 0000018A E8 [00000000]                   	CALL	_init_gdtidt
   227 0000018F 68 [00000064]                   	PUSH	LC5
   228 00000194 6A 20                           	PUSH	32
   229 00000196 6A 00                           	PUSH	0
   230 00000198 6A 07                           	PUSH	7
   231 0000019A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   232 000001A1 50                              	PUSH	EAX
   233 000001A2 FF 35 00000FF8                  	PUSH	DWORD [4088]
   234 000001A8 E8 [00000000]                   	CALL	_draw_string
   235 000001AD E8 [00000000]                   	CALL	_init_pic
   236 000001B2 68 [0000007E]                   	PUSH	LC6
   237 000001B7 6A 30                           	PUSH	48
   238 000001B9 6A 00                           	PUSH	0
   239 000001BB 6A 07                           	PUSH	7
   240 000001BD 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   241 000001C4 50                              	PUSH	EAX
   242 000001C5 FF 35 00000FF8                  	PUSH	DWORD [4088]
   243 000001CB E8 [00000000]                   	CALL	_draw_string
   244 000001D0 83 C4 30                        	ADD	ESP,48
   245 000001D3 E8 [00000000]                   	CALL	_io_sti
   246 000001D8 68 [00000094]                   	PUSH	LC7
   247 000001DD 6A 40                           	PUSH	64
   248 000001DF 6A 00                           	PUSH	0
   249 000001E1 6A 07                           	PUSH	7
   250 000001E3 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   251 000001EA 50                              	PUSH	EAX
   252 000001EB FF 35 00000FF8                  	PUSH	DWORD [4088]
   253 000001F1 E8 [00000000]                   	CALL	_draw_string
   254 000001F6 E8 [00000000]                   	CALL	_init_pit
   255 000001FB 68 [000000B9]                   	PUSH	LC8
   256 00000200 6A 50                           	PUSH	80
   257 00000202 6A 00                           	PUSH	0
   258 00000204 6A 07                           	PUSH	7
   259 00000206 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   260 0000020D 50                              	PUSH	EAX
   261 0000020E FF 35 00000FF8                  	PUSH	DWORD [4088]
   262 00000214 E8 [00000000]                   	CALL	_draw_string
   263 00000219 83 C4 30                        	ADD	ESP,48
   264 0000021C E8 [00000000]                   	CALL	_init_keyboard
   265 00000221 8D 45 B4                        	LEA	EAX,DWORD [-76+EBP]
   266 00000224 50                              	PUSH	EAX
   267 00000225 E8 [00000000]                   	CALL	_enable_mouse
   268 0000022A 68 [000000CF]                   	PUSH	LC9
   269 0000022F 6A 60                           	PUSH	96
   270 00000231 6A 00                           	PUSH	0
   271 00000233 6A 07                           	PUSH	7
   272 00000235 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   273 0000023C 50                              	PUSH	EAX
   274 0000023D FF 35 00000FF8                  	PUSH	DWORD [4088]
   275 00000243 E8 [00000000]                   	CALL	_draw_string
   276 00000248 68 000000F8                     	PUSH	248
   277 0000024D 6A 21                           	PUSH	33
   278 0000024F E8 [00000000]                   	CALL	_io_out8
   279 00000254 83 C4 24                        	ADD	ESP,36
   280 00000257 68 000000EF                     	PUSH	239
   281 0000025C 68 000000A1                     	PUSH	161
   282 00000261 E8 [00000000]                   	CALL	_io_out8
   283 00000266 E8 [00000000]                   	CALL	_task_init
   284 0000026B 68 [000000F0]                   	PUSH	LC10
   285 00000270 6A 70                           	PUSH	112
   286 00000272 A3 [0000021C]                   	MOV	DWORD [_task_kernal],EAX
   287 00000277 6A 00                           	PUSH	0
   288 00000279 6A 07                           	PUSH	7
   289 0000027B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   290 00000282 50                              	PUSH	EAX
   291 00000283 FF 35 00000FF8                  	PUSH	DWORD [4088]
   292 00000289 E8 [00000000]                   	CALL	_draw_string
   293 0000028E 83 C4 20                        	ADD	ESP,32
   294 00000291 E8 [00000000]                   	CALL	_init_palette
   295 00000296 68 [00000117]                   	PUSH	LC11
   296 0000029B 68 00000080                     	PUSH	128
   297 000002A0 6A 00                           	PUSH	0
   298 000002A2 6A 07                           	PUSH	7
   299 000002A4 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   300 000002AB 50                              	PUSH	EAX
   301 000002AC FF 35 00000FF8                  	PUSH	DWORD [4088]
   302 000002B2 E8 [00000000]                   	CALL	_draw_string
   303 000002B7 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   304 000002BE 50                              	PUSH	EAX
   305 000002BF 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   306 000002C6 50                              	PUSH	EAX
   307 000002C7 FF 35 00000FF8                  	PUSH	DWORD [4088]
   308 000002CD E8 [00000000]                   	CALL	_shtctl_init
   309 000002D2 83 C4 24                        	ADD	ESP,36
   310 000002D5 68 [00000138]                   	PUSH	LC12
   311 000002DA 68 00000090                     	PUSH	144
   312 000002DF 6A 00                           	PUSH	0
   313 000002E1 6A 07                           	PUSH	7
   314 000002E3 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   315 000002EA 50                              	PUSH	EAX
   316 000002EB FF 35 00000FF8                  	PUSH	DWORD [4088]
   317 000002F1 E8 [00000000]                   	CALL	_draw_string
   318 000002F6 E8 [00000000]                   	CALL	_sheet_alloc
   319 000002FB 89 45 AC                        	MOV	DWORD [-84+EBP],EAX
   320 000002FE E8 [00000000]                   	CALL	_sheet_alloc
   321 00000303 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   322 0000030A 89 45 A8                        	MOV	DWORD [-88+EBP],EAX
   323 0000030D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   324 00000314 0F AF C2                        	IMUL	EAX,EDX
   325 00000317 50                              	PUSH	EAX
   326 00000318 E8 [00000000]                   	CALL	_mm_malloc
   327 0000031D 68 00000100                     	PUSH	256
   328 00000322 89 45 A4                        	MOV	DWORD [-92+EBP],EAX
   329 00000325 E8 [00000000]                   	CALL	_mm_malloc
   330 0000032A 83 C4 20                        	ADD	ESP,32
   331 0000032D 89 C3                           	MOV	EBX,EAX
   332 0000032F 68 000000FF                     	PUSH	255
   333 00000334 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   334 0000033B 50                              	PUSH	EAX
   335 0000033C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   336 00000343 50                              	PUSH	EAX
   337 00000344 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   338 00000347 FF 75 AC                        	PUSH	DWORD [-84+EBP]
   339 0000034A E8 [00000000]                   	CALL	_sheet_setbuf
   340 0000034F 68 000000FF                     	PUSH	255
   341 00000354 6A 10                           	PUSH	16
   342 00000356 6A 10                           	PUSH	16
   343 00000358 53                              	PUSH	EBX
   344 00000359 FF 75 A8                        	PUSH	DWORD [-88+EBP]
   345 0000035C E8 [00000000]                   	CALL	_sheet_setbuf
   346 00000361 83 C4 28                        	ADD	ESP,40
   347 00000364 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   348 0000036B 50                              	PUSH	EAX
   349 0000036C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   350 00000373 50                              	PUSH	EAX
   351 00000374 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   352 00000377 E8 [00000000]                   	CALL	_init_screen
   353 0000037C 6A FF                           	PUSH	-1
   354 0000037E 53                              	PUSH	EBX
   355 0000037F BB 00000002                     	MOV	EBX,2
   356 00000384 E8 [00000000]                   	CALL	_init_mouse_cursor
   357 00000389 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   358 00000390 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   359 00000393 89 C8                           	MOV	EAX,ECX
   360 00000395 99                              	CDQ
   361 00000396 F7 FB                           	IDIV	EBX
   362 00000398 89 45 A0                        	MOV	DWORD [-96+EBP],EAX
   363 0000039B 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   364 000003A2 68 [0000015B]                   	PUSH	LC13
   365 000003A7 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   366 000003AA 68 000000A0                     	PUSH	160
   367 000003AF 89 C8                           	MOV	EAX,ECX
   368 000003B1 6A 00                           	PUSH	0
   369 000003B3 99                              	CDQ
   370 000003B4 F7 FB                           	IDIV	EBX
   371 000003B6 6A 07                           	PUSH	7
   372 000003B8 89 45 9C                        	MOV	DWORD [-100+EBP],EAX
   373 000003BB 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   374 000003C2 50                              	PUSH	EAX
   375 000003C3 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   376 000003C6 FF 35 00000FF8                  	PUSH	DWORD [4088]
   377 000003CC E8 [00000000]                   	CALL	_draw_string
   378 000003D1 83 C4 2C                        	ADD	ESP,44
   379 000003D4 6A 00                           	PUSH	0
   380 000003D6 FF 75 AC                        	PUSH	DWORD [-84+EBP]
   381 000003D9 E8 [00000000]                   	CALL	_sheet_updown
   382 000003DE 6A 01                           	PUSH	1
   383 000003E0 FF 75 A8                        	PUSH	DWORD [-88+EBP]
   384 000003E3 E8 [00000000]                   	CALL	_sheet_updown
   385 000003E8 FF 75 9C                        	PUSH	DWORD [-100+EBP]
   386 000003EB FF 75 A0                        	PUSH	DWORD [-96+EBP]
   387 000003EE FF 75 A8                        	PUSH	DWORD [-88+EBP]
   388 000003F1 E8 [00000000]                   	CALL	_sheet_slide
   389 000003F6 6A 00                           	PUSH	0
   390 000003F8 6A 00                           	PUSH	0
   391 000003FA FF 75 AC                        	PUSH	DWORD [-84+EBP]
   392 000003FD E8 [00000000]                   	CALL	_sheet_slide
   393 00000402 83 C4 28                        	ADD	ESP,40
   394 00000405 68 [0000017C]                   	PUSH	LC14
   395 0000040A 6A 10                           	PUSH	16
   396 0000040C 6A 00                           	PUSH	0
   397 0000040E 6A 03                           	PUSH	3
   398 00000410 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   399 00000417 50                              	PUSH	EAX
   400 00000418 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   401 0000041B E8 [00000000]                   	CALL	_draw_string
   402 00000420 FF 35 00000FF8                  	PUSH	DWORD [4088]
   403 00000426 68 [00000191]                   	PUSH	LC15
   404 0000042B 53                              	PUSH	EBX
   405 0000042C E8 [00000000]                   	CALL	_sprintf
   406 00000431 83 C4 24                        	ADD	ESP,36
   407 00000434 6A 10                           	PUSH	16
   408 00000436 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   409 0000043D 50                              	PUSH	EAX
   410 0000043E 6A 00                           	PUSH	0
   411 00000440 6A 00                           	PUSH	0
   412 00000442 6A 00                           	PUSH	0
   413 00000444 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   414 0000044B 50                              	PUSH	EAX
   415 0000044C FF 75 A4                        	PUSH	DWORD [-92+EBP]
   416 0000044F E8 [00000000]                   	CALL	_draw_rect
   417 00000454 53                              	PUSH	EBX
   418 00000455 6A 00                           	PUSH	0
   419 00000457 6A 00                           	PUSH	0
   420 00000459 6A 07                           	PUSH	7
   421 0000045B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   422 00000462 50                              	PUSH	EAX
   423 00000463 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   424 00000466 E8 [00000000]                   	CALL	_draw_string
   425 0000046B 83 C4 34                        	ADD	ESP,52
   426 0000046E 6A 00                           	PUSH	0
   427 00000470 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   428 00000477 50                              	PUSH	EAX
   429 00000478 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   430 0000047F 50                              	PUSH	EAX
   431 00000480 6A 00                           	PUSH	0
   432 00000482 6A 00                           	PUSH	0
   433 00000484 FF 75 AC                        	PUSH	DWORD [-84+EBP]
   434 00000487 E8 [00000000]                   	CALL	_sheet_refresh
   435 0000048C E8 [00000000]                   	CALL	_task_alloc
   436 00000491 68 00010000                     	PUSH	65536
   437 00000496 89 C3                           	MOV	EBX,EAX
   438 00000498 E8 [00000000]                   	CALL	_mm_malloc
   439 0000049D 05 00010000                     	ADD	EAX,65536
   440 000004A2 89 83 0000045C                  	MOV	DWORD [1116+EBX],EAX
   441 000004A8 C7 83 00000444 [00000000]       	MOV	DWORD [1092+EBX],_task_b_main
   442 000004B2 C7 83 0000046C 00000008         	MOV	DWORD [1132+EBX],8
   443 000004BC C7 83 00000470 00000010         	MOV	DWORD [1136+EBX],16
   444 000004C6 C7 83 00000474 00000008         	MOV	DWORD [1140+EBX],8
   445 000004D0 C7 83 00000478 00000008         	MOV	DWORD [1144+EBX],8
   446 000004DA C7 83 0000047C 00000008         	MOV	DWORD [1148+EBX],8
   447 000004E4 C7 83 00000480 00000008         	MOV	DWORD [1152+EBX],8
   448 000004EE 6A 00                           	PUSH	0
   449 000004F0 6A 01                           	PUSH	1
   450 000004F2 53                              	PUSH	EBX
   451 000004F3 E8 [00000000]                   	CALL	_task_run
   452 000004F8 83 C4 28                        	ADD	ESP,40
   453 000004FB E8 [00000000]                   	CALL	_task_alloc
   454 00000500 68 00010000                     	PUSH	65536
   455 00000505 89 C7                           	MOV	EDI,EAX
   456 00000507 A3 [00000220]                   	MOV	DWORD [_task_focused],EAX
   457 0000050C E8 [00000000]                   	CALL	_mm_malloc
   458 00000511 05 00010000                     	ADD	EAX,65536
   459 00000516 89 87 0000045C                  	MOV	DWORD [1116+EDI],EAX
   460 0000051C C7 87 00000444 [00000000]       	MOV	DWORD [1092+EDI],_task_console_main
   461 00000526 C7 87 0000046C 00000008         	MOV	DWORD [1132+EDI],8
   462 00000530 C7 87 00000470 00000010         	MOV	DWORD [1136+EDI],16
   463 0000053A C7 87 00000474 00000008         	MOV	DWORD [1140+EDI],8
   464 00000544 C7 87 00000478 00000008         	MOV	DWORD [1144+EDI],8
   465 0000054E C7 87 0000047C 00000008         	MOV	DWORD [1148+EDI],8
   466 00000558 C7 87 00000480 00000008         	MOV	DWORD [1152+EDI],8
   467 00000562 6A 00                           	PUSH	0
   468 00000564 6A 01                           	PUSH	1
   469 00000566 57                              	PUSH	EDI
   470 00000567 E8 [00000000]                   	CALL	_task_run
   471 0000056C 83 C4 10                        	ADD	ESP,16
   472 0000056F                                 L26:
   473 0000056F A1 [0000021C]                   	MOV	EAX,DWORD [_task_kernal]
   474 00000574 83 C0 10                        	ADD	EAX,16
   475 00000577 50                              	PUSH	EAX
   476 00000578 E8 [00000000]                   	CALL	_fifo_status
   477 0000057D 5A                              	POP	EDX
   478 0000057E 85 C0                           	TEST	EAX,EAX
   479 00000580 75 0C                           	JNE	L14
   480 00000582 FF 35 [0000021C]                	PUSH	DWORD [_task_kernal]
   481 00000588 E8 [00000000]                   	CALL	_task_sleep
   482 0000058D 58                              	POP	EAX
   483 0000058E                                 L14:
   484 0000058E A1 [0000021C]                   	MOV	EAX,DWORD [_task_kernal]
   485 00000593 83 C0 10                        	ADD	EAX,16
   486 00000596 50                              	PUSH	EAX
   487 00000597 E8 [00000000]                   	CALL	_fifo_get
   488 0000059C 5E                              	POP	ESI
   489 0000059D 89 C3                           	MOV	EBX,EAX
   490 0000059F 3D 000000BA                     	CMP	EAX,186
   491 000005A4 0F 84 00000217                  	JE	L27
   492 000005AA                                 L15:
   493 000005AA 81 FB 000000FF                  	CMP	EBX,255
   494 000005B0 0F 86 000000E1                  	JBE	L28
   495 000005B6 0F B6 C3                        	MOVZX	EAX,BL
   496 000005B9 50                              	PUSH	EAX
   497 000005BA 8D 45 B4                        	LEA	EAX,DWORD [-76+EBP]
   498 000005BD 50                              	PUSH	EAX
   499 000005BE E8 [00000000]                   	CALL	_mouse_decode
   500 000005C3 59                              	POP	ECX
   501 000005C4 5B                              	POP	EBX
   502 000005C5 85 C0                           	TEST	EAX,EAX
   503 000005C7 74 A6                           	JE	L26
   504 000005C9 0F B6 45 B6                     	MOVZX	EAX,BYTE [-74+EBP]
   505 000005CD 50                              	PUSH	EAX
   506 000005CE 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   507 000005D1 0F B6 45 B5                     	MOVZX	EAX,BYTE [-75+EBP]
   508 000005D5 50                              	PUSH	EAX
   509 000005D6 0F B6 45 B4                     	MOVZX	EAX,BYTE [-76+EBP]
   510 000005DA 50                              	PUSH	EAX
   511 000005DB 68 [0000019A]                   	PUSH	LC18
   512 000005E0 53                              	PUSH	EBX
   513 000005E1 E8 [00000000]                   	CALL	_sprintf
   514 000005E6 6A 0F                           	PUSH	15
   515 000005E8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   516 000005EF 50                              	PUSH	EAX
   517 000005F0 6A 00                           	PUSH	0
   518 000005F2 6A 00                           	PUSH	0
   519 000005F4 6A 00                           	PUSH	0
   520 000005F6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   521 000005FD 50                              	PUSH	EAX
   522 000005FE FF 75 A4                        	PUSH	DWORD [-92+EBP]
   523 00000601 E8 [00000000]                   	CALL	_draw_rect
   524 00000606 83 C4 30                        	ADD	ESP,48
   525 00000609 53                              	PUSH	EBX
   526 0000060A 6A 00                           	PUSH	0
   527 0000060C 6A 00                           	PUSH	0
   528 0000060E 6A 07                           	PUSH	7
   529 00000610 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   530 00000617 50                              	PUSH	EAX
   531 00000618 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   532 0000061B E8 [00000000]                   	CALL	_draw_string
   533 00000620 6A 00                           	PUSH	0
   534 00000622 6A 10                           	PUSH	16
   535 00000624 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   536 0000062B 50                              	PUSH	EAX
   537 0000062C 6A 00                           	PUSH	0
   538 0000062E 6A 00                           	PUSH	0
   539 00000630 FF 75 AC                        	PUSH	DWORD [-84+EBP]
   540 00000633 E8 [00000000]                   	CALL	_sheet_refresh
   541 00000638 8B 45 B8                        	MOV	EAX,DWORD [-72+EBP]
   542 0000063B 8B 5D BC                        	MOV	EBX,DWORD [-68+EBP]
   543 0000063E 83 C4 30                        	ADD	ESP,48
   544 00000641 01 5D 9C                        	ADD	DWORD [-100+EBP],EBX
   545 00000644 01 45 A0                        	ADD	DWORD [-96+EBP],EAX
   546 00000647 78 45                           	JS	L29
   547 00000649                                 L22:
   548 00000649 83 7D 9C 00                     	CMP	DWORD [-100+EBP],0
   549 0000064D 78 36                           	JS	L30
   550 0000064F                                 L23:
   551 0000064F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   552 00000656 48                              	DEC	EAX
   553 00000657 39 45 A0                        	CMP	DWORD [-96+EBP],EAX
   554 0000065A 7E 03                           	JLE	L24
   555 0000065C 89 45 A0                        	MOV	DWORD [-96+EBP],EAX
   556 0000065F                                 L24:
   557 0000065F 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   558 00000666 48                              	DEC	EAX
   559 00000667 39 45 9C                        	CMP	DWORD [-100+EBP],EAX
   560 0000066A 7E 03                           	JLE	L25
   561 0000066C 89 45 9C                        	MOV	DWORD [-100+EBP],EAX
   562 0000066F                                 L25:
   563 0000066F FF 75 9C                        	PUSH	DWORD [-100+EBP]
   564 00000672 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   565 00000675 FF 75 A8                        	PUSH	DWORD [-88+EBP]
   566 00000678 E8 [00000000]                   	CALL	_sheet_slide
   567 0000067D 83 C4 0C                        	ADD	ESP,12
   568 00000680 E9 FFFFFEEA                     	JMP	L26
   569 00000685                                 L30:
   570 00000685 C7 45 9C 00000000               	MOV	DWORD [-100+EBP],0
   571 0000068C EB C1                           	JMP	L23
   572 0000068E                                 L29:
   573 0000068E C7 45 A0 00000000               	MOV	DWORD [-96+EBP],0
   574 00000695 EB B2                           	JMP	L22
   575 00000697                                 L28:
   576 00000697 0F B6 F3                        	MOVZX	ESI,BL
   577 0000069A 56                              	PUSH	ESI
   578 0000069B E8 [00000000]                   	CALL	_key_to_char
   579 000006A0 59                              	POP	ECX
   580 000006A1 3C 63                           	CMP	AL,99
   581 000006A3 74 0B                           	JE	L18
   582 000006A5 56                              	PUSH	ESI
   583 000006A6 E8 [00000000]                   	CALL	_key_to_char
   584 000006AB 5A                              	POP	EDX
   585 000006AC 3C 43                           	CMP	AL,67
   586 000006AE 75 16                           	JNE	L17
   587 000006B0                                 L18:
   588 000006B0 80 3D [00000000] 01             	CMP	BYTE [_ctrl],1
   589 000006B7 75 0D                           	JNE	L17
   590 000006B9 83 3D [00000000] 00             	CMP	DWORD [_program_addr],0
   591 000006C0 0F 85 000000CB                  	JNE	L31
   592 000006C6                                 L17:
   593 000006C6 83 FB 3B                        	CMP	EBX,59
   594 000006C9 0F 84 000000A0                  	JE	L32
   595 000006CF                                 L19:
   596 000006CF A1 [00000220]                   	MOV	EAX,DWORD [_task_focused]
   597 000006D4 53                              	PUSH	EBX
   598 000006D5 83 C0 10                        	ADD	EAX,16
   599 000006D8 50                              	PUSH	EAX
   600 000006D9 E8 [00000000]                   	CALL	_fifo_put
   601 000006DE 6A 00                           	PUSH	0
   602 000006E0 6A FF                           	PUSH	-1
   603 000006E2 FF 35 [00000220]                	PUSH	DWORD [_task_focused]
   604 000006E8 E8 [00000000]                   	CALL	_task_run
   605 000006ED 0F B6 C3                        	MOVZX	EAX,BL
   606 000006F0 50                              	PUSH	EAX
   607 000006F1 66 C7 45 B2 0000                	MOV	WORD [-78+EBP],0
   608 000006F7 E8 [00000000]                   	CALL	_key_to_char
   609 000006FC 88 45 B2                        	MOV	BYTE [-78+EBP],AL
   610 000006FF 8D 45 B2                        	LEA	EAX,DWORD [-78+EBP]
   611 00000702 50                              	PUSH	EAX
   612 00000703 53                              	PUSH	EBX
   613 00000704 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   614 00000707 68 [000001C2]                   	PUSH	LC17
   615 0000070C 53                              	PUSH	EBX
   616 0000070D E8 [00000000]                   	CALL	_sprintf
   617 00000712 83 C4 28                        	ADD	ESP,40
   618 00000715 6A 0F                           	PUSH	15
   619 00000717 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   620 0000071E 50                              	PUSH	EAX
   621 0000071F 6A 00                           	PUSH	0
   622 00000721 6A 00                           	PUSH	0
   623 00000723 6A 00                           	PUSH	0
   624 00000725 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   625 0000072C 50                              	PUSH	EAX
   626 0000072D FF 75 A4                        	PUSH	DWORD [-92+EBP]
   627 00000730 E8 [00000000]                   	CALL	_draw_rect
   628 00000735 53                              	PUSH	EBX
   629 00000736 6A 00                           	PUSH	0
   630 00000738 6A 00                           	PUSH	0
   631 0000073A 6A 07                           	PUSH	7
   632 0000073C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   633 00000743 50                              	PUSH	EAX
   634 00000744 FF 75 A4                        	PUSH	DWORD [-92+EBP]
   635 00000747 E8 [00000000]                   	CALL	_draw_string
   636 0000074C 83 C4 34                        	ADD	ESP,52
   637 0000074F 6A 00                           	PUSH	0
   638 00000751 6A 10                           	PUSH	16
   639 00000753 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   640 0000075A 50                              	PUSH	EAX
   641 0000075B 6A 00                           	PUSH	0
   642 0000075D 6A 00                           	PUSH	0
   643 0000075F FF 75 AC                        	PUSH	DWORD [-84+EBP]
   644 00000762 E8 [00000000]                   	CALL	_sheet_refresh
   645 00000767 83 C4 18                        	ADD	ESP,24
   646 0000076A E9 FFFFFE00                     	JMP	L26
   647 0000076F                                 L32:
   648 0000076F A1 00268010                     	MOV	EAX,DWORD [2523152]
   649 00000774 83 F8 02                        	CMP	EAX,2
   650 00000777 0F 8E FFFFFF52                  	JLE	L19
   651 0000077D 48                              	DEC	EAX
   652 0000077E 50                              	PUSH	EAX
   653 0000077F FF 35 00268018                  	PUSH	DWORD [2523160]
   654 00000785 E8 [00000000]                   	CALL	_sheet_updown
   655 0000078A 5E                              	POP	ESI
   656 0000078B 58                              	POP	EAX
   657 0000078C E9 FFFFFF3E                     	JMP	L19
   658 00000791                                 L31:
   659 00000791 E8 [00000000]                   	CALL	_io_cli
   660 00000796 8D 87 00000428                  	LEA	EAX,DWORD [1064+EDI]
   661 0000079C 89 87 0000044C                  	MOV	DWORD [1100+EDI],EAX
   662 000007A2 C7 87 00000444 [00000000]       	MOV	DWORD [1092+EDI],_end_app
   663 000007AC E8 [00000000]                   	CALL	_io_sti
   664 000007B1 68 [000001EA]                   	PUSH	LC16
   665 000007B6 E8 [00000000]                   	CALL	_print_error
   666 000007BB 58                              	POP	EAX
   667 000007BC E9 FFFFFDAE                     	JMP	L26
   668 000007C1                                 L27:
   669 000007C1 E8 [00000000]                   	CALL	_set_kb_led
   670 000007C6 E9 FFFFFDDF                     	JMP	L15
   671                                          [SECTION .data]
   672 000001FD                                 LC19:
   673 000001FD 53 59 53 54 45 4D 20 45 52 52   	DB	"SYSTEM ERROR:",0x00
       00000207 4F 52 3A 00 
   674 0000020B                                 LC20:
   675 0000020B 3E 20 25 73 00                  	DB	"> %s",0x00
   676                                          [SECTION .text]
   677 000007CB                                 	GLOBAL	_sys_error
   678 000007CB                                 _sys_error:
   679 000007CB 55                              	PUSH	EBP
   680 000007CC 89 E5                           	MOV	EBP,ESP
   681 000007CE 53                              	PUSH	EBX
   682 000007CF 83 C4 80                        	ADD	ESP,-128
   683 000007D2 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   684 000007D9 48                              	DEC	EAX
   685 000007DA 8D 9D FFFFFF7C                  	LEA	EBX,DWORD [-132+EBP]
   686 000007E0 50                              	PUSH	EAX
   687 000007E1 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   688 000007E8 48                              	DEC	EAX
   689 000007E9 50                              	PUSH	EAX
   690 000007EA 6A 00                           	PUSH	0
   691 000007EC 6A 00                           	PUSH	0
   692 000007EE 6A 00                           	PUSH	0
   693 000007F0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   694 000007F7 50                              	PUSH	EAX
   695 000007F8 FF 35 00000FF8                  	PUSH	DWORD [4088]
   696 000007FE C6 05 [00000000] 00             	MOV	BYTE [_mtask_on],0
   697 00000805 E8 [00000000]                   	CALL	_draw_rect
   698 0000080A 68 [000001FD]                   	PUSH	LC19
   699 0000080F 6A 08                           	PUSH	8
   700 00000811 6A 08                           	PUSH	8
   701 00000813 6A 07                           	PUSH	7
   702 00000815 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   703 0000081C 50                              	PUSH	EAX
   704 0000081D FF 35 00000FF8                  	PUSH	DWORD [4088]
   705 00000823 E8 [00000000]                   	CALL	_draw_string
   706 00000828 83 C4 34                        	ADD	ESP,52
   707 0000082B FF 75 08                        	PUSH	DWORD [8+EBP]
   708 0000082E 68 [0000020B]                   	PUSH	LC20
   709 00000833 53                              	PUSH	EBX
   710 00000834 E8 [00000000]                   	CALL	_sprintf
   711 00000839 53                              	PUSH	EBX
   712 0000083A 6A 18                           	PUSH	24
   713 0000083C 6A 08                           	PUSH	8
   714 0000083E 6A 07                           	PUSH	7
   715 00000840 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   716 00000847 50                              	PUSH	EAX
   717 00000848 FF 35 00000FF8                  	PUSH	DWORD [4088]
   718 0000084E E8 [00000000]                   	CALL	_draw_string
   719 00000853 83 C4 24                        	ADD	ESP,36
   720 00000856                                 L37:
   721 00000856 E8 [00000000]                   	CALL	_io_hlt
   722 0000085B EB F9                           	JMP	L37
   723                                          [SECTION .data]
   724 00000210                                 	ALIGNB	4
   725 00000210                                 _i.0:
   726 00000210 00000001                        	DD	1
   727 00000214                                 LC21:
   728 00000214 4D 25 64 3A 20 25 73 00         	DB	"M%d: %s",0x00
   729                                          [SECTION .text]
   730 0000085D                                 	GLOBAL	_sys_debug
   731 0000085D                                 _sys_debug:
   732 0000085D 55                              	PUSH	EBP
   733 0000085E 89 E5                           	MOV	EBP,ESP
   734 00000860 53                              	PUSH	EBX
   735 00000861 83 EC 40                        	SUB	ESP,64
   736 00000864 FF 75 08                        	PUSH	DWORD [8+EBP]
   737 00000867 A1 [00000210]                   	MOV	EAX,DWORD [_i.0]
   738 0000086C 8D 5D BC                        	LEA	EBX,DWORD [-68+EBP]
   739 0000086F 50                              	PUSH	EAX
   740 00000870 40                              	INC	EAX
   741 00000871 68 [00000214]                   	PUSH	LC21
   742 00000876 A3 [00000210]                   	MOV	DWORD [_i.0],EAX
   743 0000087B 53                              	PUSH	EBX
   744 0000087C E8 [00000000]                   	CALL	_sprintf
   745 00000881 6A 1F                           	PUSH	31
   746 00000883 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   747 0000088A 48                              	DEC	EAX
   748 0000088B 50                              	PUSH	EAX
   749 0000088C 6A 10                           	PUSH	16
   750 0000088E 6A 00                           	PUSH	0
   751 00000890 6A 07                           	PUSH	7
   752 00000892 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   753 00000899 50                              	PUSH	EAX
   754 0000089A FF 35 00000FF8                  	PUSH	DWORD [4088]
   755 000008A0 E8 [00000000]                   	CALL	_draw_rect
   756 000008A5 83 C4 2C                        	ADD	ESP,44
   757 000008A8 53                              	PUSH	EBX
   758 000008A9 6A 10                           	PUSH	16
   759 000008AB 6A 00                           	PUSH	0
   760 000008AD 6A 00                           	PUSH	0
   761 000008AF 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   762 000008B6 50                              	PUSH	EAX
   763 000008B7 FF 35 00000FF8                  	PUSH	DWORD [4088]
   764 000008BD E8 [00000000]                   	CALL	_draw_string
   765 000008C2 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   766 000008C5 C9                              	LEAVE
   767 000008C6 C3                              	RET
   768 000008C7                                 	GLOBAL	_task_kernal
   769                                          [SECTION .data]
   770 0000021C                                 	ALIGNB	4
   771 0000021C                                 _task_kernal:
   772 0000021C 00 00 00 00                     	RESB	4
   773 00000220                                 	GLOBAL	_task_focused
   774                                          [SECTION .data]
   775 00000220                                 	ALIGNB	4
   776 00000220                                 _task_focused:
   777 00000220 00 00 00 00                     	RESB	4
