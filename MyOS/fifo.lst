     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_task_kernal
     7 00000000                                 	EXTERN	_task_run
     8 00000000                                 	EXTERN	_io_load_eflags
     9 00000000                                 	EXTERN	_io_cli
    10 00000000                                 	EXTERN	_io_store_eflags
    11 00000000                                 [FILE "fifo.c"]
    12                                          [SECTION .text]
    13 00000000                                 	GLOBAL	_fifo8_init
    14 00000000                                 _fifo8_init:
    15 00000000 55                              	PUSH	EBP
    16 00000001 89 E5                           	MOV	EBP,ESP
    17 00000003 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    18 00000006 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    19 00000009 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
    20 0000000C 89 48 0C                        	MOV	DWORD [12+EAX],ECX
    21 0000000F 89 10                           	MOV	DWORD [EAX],EDX
    22 00000011 89 48 10                        	MOV	DWORD [16+EAX],ECX
    23 00000014 C7 40 14 00000000               	MOV	DWORD [20+EAX],0
    24 0000001B C7 40 04 00000000               	MOV	DWORD [4+EAX],0
    25 00000022 C7 40 08 00000000               	MOV	DWORD [8+EAX],0
    26 00000029 5D                              	POP	EBP
    27 0000002A C3                              	RET
    28 0000002B                                 	GLOBAL	_fifo8_put
    29 0000002B                                 _fifo8_put:
    30 0000002B 55                              	PUSH	EBP
    31 0000002C 89 E5                           	MOV	EBP,ESP
    32 0000002E 53                              	PUSH	EBX
    33 0000002F 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    34 00000032 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
    35 00000035 83 79 10 00                     	CMP	DWORD [16+ECX],0
    36 00000039 75 0C                           	JNE	L3
    37 0000003B 83 49 14 01                     	OR	DWORD [20+ECX],1
    38 0000003F 83 C8 FF                        	OR	EAX,-1
    39 00000042                                 L2:
    40 00000042 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    41 00000045 C9                              	LEAVE
    42 00000046 C3                              	RET
    43 00000047                                 L3:
    44 00000047 8B 01                           	MOV	EAX,DWORD [ECX]
    45 00000049 8B 51 04                        	MOV	EDX,DWORD [4+ECX]
    46 0000004C 88 1C 02                        	MOV	BYTE [EDX+EAX*1],BL
    47 0000004F 8B 41 04                        	MOV	EAX,DWORD [4+ECX]
    48 00000052 40                              	INC	EAX
    49 00000053 89 41 04                        	MOV	DWORD [4+ECX],EAX
    50 00000056 3B 41 0C                        	CMP	EAX,DWORD [12+ECX]
    51 00000059 74 16                           	JE	L5
    52 0000005B                                 L4:
    53 0000005B FF 49 10                        	DEC	DWORD [16+ECX]
    54 0000005E 6A 00                           	PUSH	0
    55 00000060 6A FF                           	PUSH	-1
    56 00000062 FF 35 [00000000]                	PUSH	DWORD [_task_kernal]
    57 00000068 E8 [00000000]                   	CALL	_task_run
    58 0000006D 31 C0                           	XOR	EAX,EAX
    59 0000006F EB D1                           	JMP	L2
    60 00000071                                 L5:
    61 00000071 C7 41 04 00000000               	MOV	DWORD [4+ECX],0
    62 00000078 EB E1                           	JMP	L4
    63 0000007A                                 	GLOBAL	_fifo8_get
    64 0000007A                                 _fifo8_get:
    65 0000007A 55                              	PUSH	EBP
    66 0000007B 89 E5                           	MOV	EBP,ESP
    67 0000007D 57                              	PUSH	EDI
    68 0000007E 56                              	PUSH	ESI
    69 0000007F 53                              	PUSH	EBX
    70 00000080 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
    71 00000083 8B 43 0C                        	MOV	EAX,DWORD [12+EBX]
    72 00000086 39 43 10                        	CMP	DWORD [16+EBX],EAX
    73 00000089 74 3D                           	JE	L9
    74 0000008B E8 [00000000]                   	CALL	_io_load_eflags
    75 00000090 89 C7                           	MOV	EDI,EAX
    76 00000092 E8 [00000000]                   	CALL	_io_cli
    77 00000097 8B 43 08                        	MOV	EAX,DWORD [8+EBX]
    78 0000009A 8B 13                           	MOV	EDX,DWORD [EBX]
    79 0000009C 0F B6 34 10                     	MOVZX	ESI,BYTE [EAX+EDX*1]
    80 000000A0 40                              	INC	EAX
    81 000000A1 89 43 08                        	MOV	DWORD [8+EBX],EAX
    82 000000A4 3B 43 0C                        	CMP	EAX,DWORD [12+EBX]
    83 000000A7 74 16                           	JE	L10
    84 000000A9                                 L8:
    85 000000A9 FF 43 10                        	INC	DWORD [16+EBX]
    86 000000AC 57                              	PUSH	EDI
    87 000000AD E8 [00000000]                   	CALL	_io_store_eflags
    88 000000B2 89 F2                           	MOV	EDX,ESI
    89 000000B4 0F B6 C2                        	MOVZX	EAX,DL
    90 000000B7                                 L6:
    91 000000B7 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    92 000000BA 5B                              	POP	EBX
    93 000000BB 5E                              	POP	ESI
    94 000000BC 5F                              	POP	EDI
    95 000000BD 5D                              	POP	EBP
    96 000000BE C3                              	RET
    97 000000BF                                 L10:
    98 000000BF C7 43 08 00000000               	MOV	DWORD [8+EBX],0
    99 000000C6 EB E1                           	JMP	L8
   100 000000C8                                 L9:
   101 000000C8 B8 000000FF                     	MOV	EAX,255
   102 000000CD EB E8                           	JMP	L6
   103 000000CF                                 	GLOBAL	_fifo8_status
   104 000000CF                                 _fifo8_status:
   105 000000CF 55                              	PUSH	EBP
   106 000000D0 89 E5                           	MOV	EBP,ESP
   107 000000D2 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   108 000000D5 5D                              	POP	EBP
   109 000000D6 8B 42 0C                        	MOV	EAX,DWORD [12+EDX]
   110 000000D9 2B 42 10                        	SUB	EAX,DWORD [16+EDX]
   111 000000DC C3                              	RET
