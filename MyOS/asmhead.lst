     1 00000000                                 ; MyOS boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 00280000                              BOTPAK	EQU		0x00280000		; Bootpack Address
     5  = 00100000                              DSKCAC	EQU		0x00100000		; Disk in the memory address
     6  = 00008000                              DSKCAC0	EQU		0x00008000		; Disk in the memory address (real mode)
     7 00000000                                 
     8 00000000                                 ; BOOT_INFO
     9  = 00000FF0                              CYLS	EQU		0x0ff0			; Number of sectors loaded
    10  = 00000FF1                              LEDS	EQU		0x0ff1			; Keyboard status
    11  = 00000FF2                              VMODE	EQU		0x0ff2			; Info for color mode
    12  = 00000FF4                              SCRNX	EQU		0x0ff4			; x solution
    13  = 00000FF6                              SCRNY	EQU		0x0ff6			; y solution
    14  = 00000FF8                              VRAM	EQU		0x0ff8			; Starting address of Display Buffer
    15 00000000                                 
    16                                          		ORG		0xc200			; Starting address of the boot program
    17 0000C200                                 
    18 0000C200                                 ; Set up GUI
    19 0000C200                                 
    20 0000C200 B0 13                           		MOV		AL,0x13			; VGA, 320x200x8bit
    21 0000C202 B4 00                           		MOV		AH,0x00
    22 0000C204 CD 10                           		INT		0x10
    23 0000C206 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; Screen mode
    24 0000C20B C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
    25 0000C211 C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
    26 0000C217 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0xa0000
    27 0000C220                                 
    28 0000C220                                 ; Use BIOS to get keyboard status
    29 0000C220                                 
    30 0000C220 B4 02                           		MOV		AH,0x02
    31 0000C222 CD 16                           		INT		0x16 			; keyboard BIOS
    32 0000C224 A2 0FF1                         		MOV		[LEDS],AL
    33 0000C227                                 
    34 0000C227                                 ; Block PIC interrupt signals
    35 0000C227                                 
    36 0000C227 B0 FF                           		MOV		AL,0xff
    37 0000C229 E6 21                           		OUT		0x21,AL			; io_out(PIC0_IMR, 0xff);
    38 0000C22B 90                              		NOP
    39 0000C22C E6 A1                           		OUT		0xa1,AL			; io_out(PIC1_IMR, 0xff);
    40 0000C22E                                 
    41 0000C22E FA                              		CLI						; set IF in CPU
    42 0000C22F                                 
    43 0000C22F                                 ; Set A20GATE
    44 0000C22F                                 
    45 0000C22F E8 00B5                         		CALL	waitkbdout		; wait_KBC_sendready();
    46 0000C232 B0 D1                           		MOV		AL,0xd1
    47 0000C234 E6 64                           		OUT		0x64,AL
    48 0000C236 E8 00AE                         		CALL	waitkbdout
    49 0000C239 B0 DF                           		MOV		AL,0xdf			; enable A20 to support 32 bit memory
    50 0000C23B E6 60                           		OUT		0x60,AL
    51 0000C23D E8 00A7                         		CALL	waitkbdout
    52 0000C240                                 
    53 0000C240                                 ; real mode to protected mode
    54 0000C240                                 
    55 0000C240                                 [INSTRSET "i486p"]				; using 486 instruction set
    56 0000C240                                 
    57 0000C240 0F 01 16 C32A                   		LGDT	[GDTR0]			; set temporary GDT
    58 0000C245 0F 20 C0                        		MOV		EAX,CR0			; reset CR0 (Control Register 0)
    59 0000C248 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; clear bit 31 (no paging)
    60 0000C24E 66 83 C8 01                     		OR		EAX,0x00000001	; set bit  0 (to protected mode)
    61 0000C252 0F 22 C0                        		MOV		CR0,EAX
    62 0000C255 EB 00                           		JMP		pipelineflush	; JMP after CR0 reset
    63 0000C257                                 pipelineflush:
    64 0000C257 B8 0008                         		MOV		AX,8			; reset all segment registers (except cs)
    65 0000C25A 8E D8                           		MOV		DS,AX			; set all of them to 0x8 (i.e. gdt+1)
    66 0000C25C 8E C0                           		MOV		ES,AX
    67 0000C25E 8E E0                           		MOV		FS,AX
    68 0000C260 8E E8                           		MOV		GS,AX
    69 0000C262 8E D0                           		MOV		SS,AX
    70 0000C264                                 
    71 0000C264                                 ; store bootpack
    72 0000C264                                 
    73 0000C264 66 BE 0000C330                  		MOV		ESI,bootpack	; origin
    74 0000C26A 66 BF 00280000                  		MOV		EDI,BOTPAK		; destination
    75 0000C270 66 B9 00020000                  		MOV		ECX,512*1024/4	; 512KB
    76 0000C276 E8 0077                         		CALL	memcpy
    77 0000C279                                 
    78 0000C279                                 ; store disk content
    79 0000C279                                 
    80 0000C279                                 ; boot area (IPL)
    81 0000C279                                 
    82 0000C279 66 BE 00007C00                  		MOV		ESI,0x7c00		; origin
    83 0000C27F 66 BF 00100000                  		MOV		EDI,DSKCAC		; destination
    84 0000C285 66 B9 00000080                  		MOV		ECX,512/4		; 512B
    85 0000C28B E8 0062                         		CALL	memcpy
    86 0000C28E                                 
    87 0000C28E                                 ; other stuff in the disk
    88 0000C28E                                 
    89 0000C28E 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; origin
    90 0000C294 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; destination
    91 0000C29A 66 B9 00000000                  		MOV		ECX,0
    92 0000C2A0 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
    93 0000C2A4 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; CYLS*SECTOR_SIZE*SECTOR*HEAD/4
    94 0000C2AB 66 81 E9 00000080               		SUB		ECX,512/4		; Minus IPL
    95 0000C2B2 E8 003B                         		CALL	memcpy
    96 0000C2B5                                 
    97 0000C2B5                                 ; asmhead finished here, ready to start bootpack
    98 0000C2B5                                 
    99 0000C2B5                                 ; start bootpack
   100 0000C2B5                                 
   101 0000C2B5 66 BB 00280000                  		MOV		EBX,BOTPAK
   102 0000C2BB 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   103 0000C2C0 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   104 0000C2C4 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   105 0000C2C8 74 10                           		JZ		skip			; No need to copy data, go to the start of bootpack
   106 0000C2CA 67 66 8B 73 14                  		MOV		ESI,[EBX+20]
   107 0000C2CF 66 01 DE                        		ADD		ESI,EBX			; origin
   108 0000C2D2 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; destination
   109 0000C2D7 E8 0016                         		CALL	memcpy
   110 0000C2DA                                 skip:
   111 0000C2DA 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; initial stack address
   112 0000C2DF 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b	; start bootpack (second segment, 0x1b offset)
   113 0000C2E7                                 
   114 0000C2E7                                 waitkbdout:						; wait_KBC_sendready();
   115 0000C2E7 E4 64                           		IN		 AL,0x64
   116 0000C2E9 24 02                           		AND		 AL,0x02
   117 0000C2EB E4 60                           		IN		 AL,0x60		; empty rubbish data in keyboard
   118 0000C2ED 75 F8                           		JNZ		waitkbdout
   119 0000C2EF C3                              		RET
   120 0000C2F0                                 
   121 0000C2F0                                 memcpy:							; store [ESI] to [EDI] (4 bit wise)
   122 0000C2F0 67 66 8B 06                     		MOV		EAX,[ESI]
   123 0000C2F4 66 83 C6 04                     		ADD		ESI,4
   124 0000C2F8 67 66 89 07                     		MOV		[EDI],EAX
   125 0000C2FC 66 83 C7 04                     		ADD		EDI,4
   126 0000C300 66 83 E9 01                     		SUB		ECX,1
   127 0000C304 75 EA                           		JNZ		memcpy
   128 0000C306 C3                              		RET
   129 0000C307                                 		
   130 0000C307 00 00 00 00 00 00 00 00 00      		ALIGNB	16
   131 0000C310                                 GDT0:
   132 0000C310 00 00 00 00 00 00 00 00         		RESB	8				; NULL Selector (empty region for gdt0)
   133 0000C318                                 		; set_segmdesc(gdt + 1, 0xffffffff, 0x00000000, AR_DATA32_RW); // All memory
   134 0000C318 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	
   135 0000C320                                 		; set_segmdesc(gdt + 2, LIMIT_BOTPAK, ADR_BOTPAK, AR_CODE32_ER); // For bootpack
   136 0000C320 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	
   137 0000C328                                 
   138 0000C328 0000                            		DW		0
   139 0000C32A                                 GDTR0:					; Note GDTR has 48 bits
   140 0000C32A 0017                            		DW		8*3-1	; three entries in temporary GDT
   141 0000C32C 0000C310                        		DD		GDT0	; addr of temporary GDT
   142 0000C330                                 
   143 0000C330                                 		ALIGNB	16
   144 0000C330                                 bootpack:
