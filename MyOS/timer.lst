     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_fifo_put
     8 00000000                                 	EXTERN	_task_run
     9 00000000                                 	EXTERN	_mm_free
    10 00000000                                 	EXTERN	_mtask_on
    11 00000000                                 	EXTERN	_task_switch
    12 00000000                                 	EXTERN	_mm_malloc
    13 00000000                                 	EXTERN	_task_now
    14 00000000                                 	EXTERN	_io_load_eflags
    15 00000000                                 	EXTERN	_io_cli
    16 00000000                                 	EXTERN	_io_store_eflags
    17 00000000                                 [FILE "timer.c"]
    18                                          [SECTION .text]
    19 00000000                                 	GLOBAL	_init_pit
    20 00000000                                 _init_pit:
    21 00000000 55                              	PUSH	EBP
    22 00000001 89 E5                           	MOV	EBP,ESP
    23 00000003 6A 34                           	PUSH	52
    24 00000005 6A 43                           	PUSH	67
    25 00000007 E8 [00000000]                   	CALL	_io_out8
    26 0000000C 68 0000009C                     	PUSH	156
    27 00000011 6A 40                           	PUSH	64
    28 00000013 E8 [00000000]                   	CALL	_io_out8
    29 00000018 6A 2E                           	PUSH	46
    30 0000001A 6A 40                           	PUSH	64
    31 0000001C E8 [00000000]                   	CALL	_io_out8
    32 00000021 C7 05 0026A414 00000000         	MOV	DWORD [2532372],0
    33 0000002B C7 05 0026A418 00000000         	MOV	DWORD [2532376],0
    34 00000035 C7 05 [00000000] 00000000       	MOV	DWORD [_first],0
    35 0000003F C9                              	LEAVE
    36 00000040 C3                              	RET
    37 00000041                                 _start_usr_timing:
    38 00000041 55                              	PUSH	EBP
    39 00000042 89 E5                           	MOV	EBP,ESP
    40 00000044 56                              	PUSH	ESI
    41 00000045 53                              	PUSH	EBX
    42 00000046 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    43 00000049 A1 0026A414                     	MOV	EAX,DWORD [2532372]
    44 0000004E 8B 75 0C                        	MOV	ESI,DWORD [12+EBP]
    45 00000051 89 01                           	MOV	DWORD [ECX],EAX
    46 00000053 A1 0026A418                     	MOV	EAX,DWORD [2532376]
    47 00000058 89 41 04                        	MOV	DWORD [4+ECX],EAX
    48 0000005B 8B 1D 0026A414                  	MOV	EBX,DWORD [2532372]
    49 00000061 89 59 08                        	MOV	DWORD [8+ECX],EBX
    50 00000064 A1 0026A418                     	MOV	EAX,DWORD [2532376]
    51 00000069 89 41 0C                        	MOV	DWORD [12+ECX],EAX
    52 0000006C 8D 14 06                        	LEA	EDX,DWORD [ESI+EAX*1]
    53 0000006F 39 C2                           	CMP	EDX,EAX
    54 00000071 73 06                           	JAE	L3
    55 00000073 8D 43 01                        	LEA	EAX,DWORD [1+EBX]
    56 00000076 89 41 08                        	MOV	DWORD [8+ECX],EAX
    57 00000079                                 L3:
    58 00000079 01 71 0C                        	ADD	DWORD [12+ECX],ESI
    59 0000007C 5B                              	POP	EBX
    60 0000007D 5E                              	POP	ESI
    61 0000007E 5D                              	POP	EBP
    62 0000007F C3                              	RET
    63 00000080                                 _test_usr_timing:
    64 00000080 55                              	PUSH	EBP
    65 00000081 89 E5                           	MOV	EBP,ESP
    66 00000083 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    67 00000086 8B 42 08                        	MOV	EAX,DWORD [8+EDX]
    68 00000089 39 05 0026A414                  	CMP	DWORD [2532372],EAX
    69 0000008F 72 12                           	JB	L5
    70 00000091 8B 42 0C                        	MOV	EAX,DWORD [12+EDX]
    71 00000094 39 05 0026A418                  	CMP	DWORD [2532376],EAX
    72 0000009A 72 07                           	JB	L5
    73 0000009C B8 00000001                     	MOV	EAX,1
    74 000000A1                                 L4:
    75 000000A1 5D                              	POP	EBP
    76 000000A2 C3                              	RET
    77 000000A3                                 L5:
    78 000000A3 31 C0                           	XOR	EAX,EAX
    79 000000A5 EB FA                           	JMP	L4
    80 000000A7                                 	GLOBAL	_inthandler20
    81 000000A7                                 _inthandler20:
    82 000000A7 55                              	PUSH	EBP
    83 000000A8 89 E5                           	MOV	EBP,ESP
    84 000000AA 6A 60                           	PUSH	96
    85 000000AC 6A 20                           	PUSH	32
    86 000000AE E8 [00000000]                   	CALL	_io_out8
    87 000000B3 A1 0026A418                     	MOV	EAX,DWORD [2532376]
    88 000000B8 40                              	INC	EAX
    89 000000B9 A3 0026A418                     	MOV	DWORD [2532376],EAX
    90 000000BE 85 C0                           	TEST	EAX,EAX
    91 000000C0 59                              	POP	ECX
    92 000000C1 5A                              	POP	EDX
    93 000000C2 75 06                           	JNE	L8
    94 000000C4 FF 05 0026A414                  	INC	DWORD [2532372]
    95 000000CA                                 L8:
    96 000000CA 83 3D [00000000] 00             	CMP	DWORD [_first],0
    97 000000D1 74 5F                           	JE	L10
    98 000000D3                                 L11:
    99 000000D3 A1 [00000000]                   	MOV	EAX,DWORD [_first]
   100 000000D8 83 C0 04                        	ADD	EAX,4
   101 000000DB 50                              	PUSH	EAX
   102 000000DC E8 FFFFFF9F                     	CALL	_test_usr_timing
   103 000000E1 5A                              	POP	EDX
   104 000000E2 85 C0                           	TEST	EAX,EAX
   105 000000E4 74 4C                           	JE	L10
   106 000000E6 8B 15 [00000000]                	MOV	EDX,DWORD [_first]
   107 000000EC 0F B6 42 18                     	MOVZX	EAX,BYTE [24+EDX]
   108 000000F0 05 00000200                     	ADD	EAX,512
   109 000000F5 50                              	PUSH	EAX
   110 000000F6 8B 42 14                        	MOV	EAX,DWORD [20+EDX]
   111 000000F9 83 C0 10                        	ADD	EAX,16
   112 000000FC 50                              	PUSH	EAX
   113 000000FD E8 [00000000]                   	CALL	_fifo_put
   114 00000102 6A 00                           	PUSH	0
   115 00000104 6A FF                           	PUSH	-1
   116 00000106 A1 [00000000]                   	MOV	EAX,DWORD [_first]
   117 0000010B FF 70 14                        	PUSH	DWORD [20+EAX]
   118 0000010E E8 [00000000]                   	CALL	_task_run
   119 00000113 8B 15 [00000000]                	MOV	EDX,DWORD [_first]
   120 00000119 8B 02                           	MOV	EAX,DWORD [EDX]
   121 0000011B A3 [00000000]                   	MOV	DWORD [_first],EAX
   122 00000120 52                              	PUSH	EDX
   123 00000121 E8 [00000000]                   	CALL	_mm_free
   124 00000126 83 C4 18                        	ADD	ESP,24
   125 00000129 83 3D [00000000] 00             	CMP	DWORD [_first],0
   126 00000130 75 A1                           	JNE	L11
   127 00000132                                 L10:
   128 00000132 80 3D [00000000] 00             	CMP	BYTE [_mtask_on],0
   129 00000139 75 02                           	JNE	L17
   130 0000013B C9                              	LEAVE
   131 0000013C C3                              	RET
   132 0000013D                                 L17:
   133 0000013D C9                              	LEAVE
   134 0000013E E9 [00000000]                   	JMP	_task_switch
   135 00000143                                 	GLOBAL	_start_timing
   136 00000143                                 _start_timing:
   137 00000143 55                              	PUSH	EBP
   138 00000144 89 E5                           	MOV	EBP,ESP
   139 00000146 57                              	PUSH	EDI
   140 00000147 56                              	PUSH	ESI
   141 00000148 53                              	PUSH	EBX
   142 00000149 51                              	PUSH	ECX
   143 0000014A 51                              	PUSH	ECX
   144 0000014B 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   145 0000014E 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   146 00000151 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   147 00000154 6A 1C                           	PUSH	28
   148 00000156 E8 [00000000]                   	CALL	_mm_malloc
   149 0000015B 8B 3D [00000000]                	MOV	EDI,DWORD [_first]
   150 00000161 C7 45 EC [00000000]             	MOV	DWORD [-20+EBP],_first
   151 00000168 88 58 18                        	MOV	BYTE [24+EAX],BL
   152 0000016B 89 C6                           	MOV	ESI,EAX
   153 0000016D E8 [00000000]                   	CALL	_task_now
   154 00000172 89 46 14                        	MOV	DWORD [20+ESI],EAX
   155 00000175 8D 46 04                        	LEA	EAX,DWORD [4+ESI]
   156 00000178 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   157 0000017B 50                              	PUSH	EAX
   158 0000017C E8 FFFFFEC0                     	CALL	_start_usr_timing
   159 00000181 E8 [00000000]                   	CALL	_io_load_eflags
   160 00000186 89 C3                           	MOV	EBX,EAX
   161 00000188 E8 [00000000]                   	CALL	_io_cli
   162 0000018D 83 C4 0C                        	ADD	ESP,12
   163 00000190 85 FF                           	TEST	EDI,EDI
   164 00000192 74 17                           	JE	L20
   165 00000194                                 L28:
   166 00000194 8B 57 0C                        	MOV	EDX,DWORD [12+EDI]
   167 00000197 8B 46 0C                        	MOV	EAX,DWORD [12+ESI]
   168 0000019A 39 C2                           	CMP	EDX,EAX
   169 0000019C 77 0D                           	JA	L20
   170 0000019E 39 C2                           	CMP	EDX,EAX
   171 000001A0 74 1F                           	JE	L30
   172 000001A2                                 L24:
   173 000001A2 89 7D EC                        	MOV	DWORD [-20+EBP],EDI
   174 000001A5 8B 3F                           	MOV	EDI,DWORD [EDI]
   175 000001A7 85 FF                           	TEST	EDI,EDI
   176 000001A9 75 E9                           	JNE	L28
   177 000001AB                                 L20:
   178 000001AB 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
   179 000001AE 89 30                           	MOV	DWORD [EAX],ESI
   180 000001B0 89 3E                           	MOV	DWORD [ESI],EDI
   181 000001B2 89 5D 08                        	MOV	DWORD [8+EBP],EBX
   182 000001B5 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   183 000001B8 5B                              	POP	EBX
   184 000001B9 5E                              	POP	ESI
   185 000001BA 5F                              	POP	EDI
   186 000001BB 5D                              	POP	EBP
   187 000001BC E9 [00000000]                   	JMP	_io_store_eflags
   188 000001C1                                 L30:
   189 000001C1 8B 46 10                        	MOV	EAX,DWORD [16+ESI]
   190 000001C4 39 47 10                        	CMP	DWORD [16+EDI],EAX
   191 000001C7 76 D9                           	JBE	L24
   192 000001C9 EB E0                           	JMP	L20
   193 000001CB                                 	GLOBAL	_first
   194                                          [SECTION .data]
   195 00000000                                 	ALIGNB	4
   196 00000000                                 _first:
   197 00000000 00 00 00 00                     	RESB	4
